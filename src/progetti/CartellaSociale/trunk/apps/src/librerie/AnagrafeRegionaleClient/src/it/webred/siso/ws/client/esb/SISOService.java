package it.webred.siso.ws.client.esb;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.6
 * 2015-06-09T13:44:14.645+02:00
 * Generated source version: 2.4.6
 * 
 */
@WebServiceClient(name = "SISOService", 
                  wsdlLocation = "http://miami:8280/services/SISOService?wsdl",
                  targetNamespace = "http://esb.siso.webred.it") 
public class SISOService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://esb.siso.webred.it", "SISOService");
    public final static QName SISOServiceHttpsSoap11Endpoint = new QName("http://esb.siso.webred.it", "SISOServiceHttpsSoap11Endpoint");
    public final static QName SISOServiceHttpEndpoint = new QName("http://esb.siso.webred.it", "SISOServiceHttpEndpoint");
    public final static QName SISOServiceHttpSoap11Endpoint = new QName("http://esb.siso.webred.it", "SISOServiceHttpSoap11Endpoint");
    public final static QName SISOServiceHttpSoap12Endpoint = new QName("http://esb.siso.webred.it", "SISOServiceHttpSoap12Endpoint");
    public final static QName SISOServiceHttpsEndpoint = new QName("http://esb.siso.webred.it", "SISOServiceHttpsEndpoint");
    public final static QName SISOServiceHttpsSoap12Endpoint = new QName("http://esb.siso.webred.it", "SISOServiceHttpsSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("http://miami:8280/services/SISOService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SISOService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://miami:8280/services/SISOService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SISOService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SISOService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SISOService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SISOService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SISOService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SISOService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns SISOServicePortType
     */
    @WebEndpoint(name = "SISOServiceHttpsSoap11Endpoint")
    public SISOServicePortType getSISOServiceHttpsSoap11Endpoint() {
        return super.getPort(SISOServiceHttpsSoap11Endpoint, SISOServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SISOServicePortType
     */
    @WebEndpoint(name = "SISOServiceHttpsSoap11Endpoint")
    public SISOServicePortType getSISOServiceHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(SISOServiceHttpsSoap11Endpoint, SISOServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns SISOServicePortType
     */
    @WebEndpoint(name = "SISOServiceHttpEndpoint")
    public SISOServicePortType getSISOServiceHttpEndpoint() {
        return super.getPort(SISOServiceHttpEndpoint, SISOServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SISOServicePortType
     */
    @WebEndpoint(name = "SISOServiceHttpEndpoint")
    public SISOServicePortType getSISOServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(SISOServiceHttpEndpoint, SISOServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns SISOServicePortType
     */
    @WebEndpoint(name = "SISOServiceHttpSoap11Endpoint")
    public SISOServicePortType getSISOServiceHttpSoap11Endpoint() {
        return super.getPort(SISOServiceHttpSoap11Endpoint, SISOServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SISOServicePortType
     */
    @WebEndpoint(name = "SISOServiceHttpSoap11Endpoint")
    public SISOServicePortType getSISOServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(SISOServiceHttpSoap11Endpoint, SISOServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns SISOServicePortType
     */
    @WebEndpoint(name = "SISOServiceHttpSoap12Endpoint")
    public SISOServicePortType getSISOServiceHttpSoap12Endpoint() {
        return super.getPort(SISOServiceHttpSoap12Endpoint, SISOServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SISOServicePortType
     */
    @WebEndpoint(name = "SISOServiceHttpSoap12Endpoint")
    public SISOServicePortType getSISOServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(SISOServiceHttpSoap12Endpoint, SISOServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns SISOServicePortType
     */
    @WebEndpoint(name = "SISOServiceHttpsEndpoint")
    public SISOServicePortType getSISOServiceHttpsEndpoint() {
        return super.getPort(SISOServiceHttpsEndpoint, SISOServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SISOServicePortType
     */
    @WebEndpoint(name = "SISOServiceHttpsEndpoint")
    public SISOServicePortType getSISOServiceHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(SISOServiceHttpsEndpoint, SISOServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns SISOServicePortType
     */
    @WebEndpoint(name = "SISOServiceHttpsSoap12Endpoint")
    public SISOServicePortType getSISOServiceHttpsSoap12Endpoint() {
        return super.getPort(SISOServiceHttpsSoap12Endpoint, SISOServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SISOServicePortType
     */
    @WebEndpoint(name = "SISOServiceHttpsSoap12Endpoint")
    public SISOServicePortType getSISOServiceHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(SISOServiceHttpsSoap12Endpoint, SISOServicePortType.class, features);
    }

}
