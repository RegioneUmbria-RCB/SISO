<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd" version="2.0">

    <named-query name="CsRdcAnagraficaGepi.findInNucleo">
       <query>
		<![CDATA[
			SELECT s FROM CsRdcAnagraficaGepi s 
			WHERE s.cf=:cfSoggetto OR s.cf IN (
				select UPPER(c.csAAnagrafica.cf) 
				from CsAComponente c 
				where c.csAFamigliaGruppo.csASoggetto.id = :idSoggetto 
				and :dtVal between c.csAFamigliaGruppo.dataInizioApp and c.csAFamigliaGruppo.dataFineApp)
		]]>
	</query>
    </named-query> 
     
  <named-query name="VMobiCasi.findCasiByUsername">
    <query>
			<![CDATA[
				SELECT a FROM VMobiCasi a WHERE a.username = :username
			]]>
		</query>
  </named-query>
  
  
    
  <!--  <named-query name="VMobiCasi.findCasiByOperatoreBySoggettoNomeCognome">
    <query>
			<![CDATA[
				SELECT a FROM VMobiCasi a join fetch a. t WHERE a.username = :username
				and a.soggNome = :nomeSoggetto
				and a.soggCognome = :cognomeSoggetto
			]]>
		</query>
  </named-query>
  
  <named-query name="VMobiCasi.findCasiByOperatoreBySoggettoCognome">
    <query>
			<![CDATA[
				SELECT a FROM VMobiCasi a WHERE a.username = :username
				and a.soggCognome = :cognomeSoggetto
			]]>
		</query>
  </named-query>
  -->
  
  <named-query name="VMobiIntErog.findIntAttiviByIdSettoreEroganteData">
    <query>
			<![CDATA[
				SELECT a FROM VMobiIntErog a WHERE a.erSettoreErogId IN (:idSettoreErogante)
				and a.flgFlagAttSospC = 'A' 
				and (a.flgDtAttivazioneDa is null or a.flgDtAttivazioneDa < :dataValiditaErogazione ) 
				and (a.flgDtAttivazioneA is null or a.flgDtAttivazioneA > :dataValiditaErogazione )
			]]>
		</query>
  </named-query>

  <named-query name="VMobiIntErog.findErogazioniByIdSettoreErogante">
    <query>
			<![CDATA[
				SELECT a FROM VMobiIntErog a WHERE a.erSettoreErogId IN (:idSettoreErogante)
				and a.iId is null
			]]>
		</query>
  </named-query>
    
 
  <!-- Configurazioni -->
  
     <named-query name="CsTbTipoPai.findByDesc">
    <query>
			<![CDATA[
				SELECT c FROM CsTbTipoPai c
				WHERE UPPER(c.descrizione) = UPPER(:descrizione)
			]]>
		</query>
  </named-query>
  
    <named-query name="CsTbCondLavoro.findAll">
    <query>
			<![CDATA[
				SELECT c FROM CsTbCondLavoro c 
				left join fetch c.csTbIngMercato ing
				order by ing.id, c.descrizione
			]]>
		</query>
  </named-query>
  
  <named-query name="CsTbStatoCivile.findAllAbil">
    <query>
			<![CDATA[
				select sc 
				from CsTbStatoCivile sc
				where sc.abilitato = '1'
				order by sc.descrizione
			]]>
		</query>
  </named-query>
  
  <named-query name="CsTbTribStruttura.findAllAbil">
    <query>
			<![CDATA[
				select sc 
				from CsTbTribStruttura sc
				where sc.abilitato = 1
				order by sc.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsItStepAttrValueBASIC.findByCsItStepId">
    <query>
			<![CDATA[
				select a from CsItStepAttrValueBASIC a inner join fetch a.csCfgAttr t
				where a.csItStepId = :csItStepId
			]]>
		</query>
  </named-query>

  <named-query name="CsTbMotivoChiusuraPai.findAllAbil">
    <query>
        <![CDATA[
          select cs 
          from CsTbMotivoChiusuraPai cs
          where cs.abilitato = '1'
          order by cs.ordine
        ]]>
      </query>
  </named-query>

  <named-query name="CsTbMapStacivGit2Cs.findByIdCet">
    <query>
			<![CDATA[
				select map
				from  CsTbMapStacivGit2Cs map 
				where upper(map.id.codOrig) = upper(:codOrig) and map.id.ente = :ente
			]]>
		</query>
  </named-query>

  <named-query name="CsTbStatoCivile.findStatoByDescrizione">
    <query>
			<![CDATA[
				select sc 
				from CsTbStatoCivile sc
				where sc.abilitato = '1'
				and sc.descrizione like '%' || :descrizione || '%'
			]]>
		</query>
  </named-query>
  
   <named-query name="CsTbCondLavoro.findByDescrizione">
    <query>
			<![CDATA[
				select sc 
				from CsTbCondLavoro sc
				where sc.abilitato = '1'
				and upper(sc.descrizione) = upper(:descrizione)
			]]>
		</query>
  </named-query>
  
   <named-query name="CsTbTitoloStudio.findByDescrizione">
    <query>
			<![CDATA[
				select sc 
				from CsTbTitoloStudio sc
				where sc.abilitato = '1'
				and upper(sc.descrizione) = upper(:descrizione)
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipologiaFamiliare.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbTipologiaFamiliare cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbResponsabilita.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbResponsabilita cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTitoloStudio.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbTitoloStudio cs
				where cs.abilitato = '1'
				order by cs.codIstat, cs.id
			]]>
		</query>
  </named-query>
  
  <named-query name="CsTbTitoloStudio.findAll">
    <query>
			<![CDATA[
				select cs 
				from CsTbTitoloStudio cs
				order by cs.codIstat, cs.id
			]]>
		</query>
  </named-query>

  <named-query name="CsTbProfessione.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbProfessione cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbSettoreImpiego.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbSettoreImpiego cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTutela.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbTutela cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbGVulnerabile.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbGVulnerabile cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipoRapportoCon.findAllAbilParenti">
    <query>
			<![CDATA[
				select cs 
				from CsTbTipoRapportoCon cs
				where cs.abilitato = '1'
				and cs.parente = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipoRapportoCon.findAllAbilConoscenti">
    <query>
			<![CDATA[
				select cs 
				from CsTbTipoRapportoCon cs
				where cs.abilitato = '1'
				and cs.parente != '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>
  
   <named-query name="CsTbMapTipoRapGit2Cs.findByRelazPar">
    <query>
			<![CDATA[
				select cs
				from CsTbMapTipoRapGit2Cs cs
				where cs.id = :id 
			]]>
		</query>
  </named-query>
  
  <named-query name="CsTbMapTipoRapGit2Cs.mappaRelazioniEnte">
    <query>
			<![CDATA[
				select cs
				from CsTbMapTipoRapGit2Cs cs
				where cs.id.ente = :ente
			]]>
		</query>
  </named-query>
  
  <named-query name="CsTbPotesta.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbPotesta cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbDisponibilita.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbDisponibilita cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipoPai.findAllAbil">
    <query>
        <![CDATA[
          select cs 
          from CsTbTipoPai cs
          where cs.abilitato = '1'
          order by cs.descrizione
        ]]>
      </query>
  </named-query>

	<named-query name="CsTbContatto.findAllAbil">
		<query>
			<![CDATA[
				select cs 
				from CsTbContatto cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbIcd10.findAllCodIniziali">
    <query>
			<![CDATA[
				select distinct cs.codIniziale 
				from CsTbIcd10 cs
				where cs.abilitato = '1'
				order by cs.codIniziale
			]]>
		</query>
  </named-query>

  <named-query name="CsTbIcd10.findCodiciByCodIniziale">
    <query>
			<![CDATA[
				select cs 
				from CsTbIcd10 cs
				where cs.abilitato = '1'
				and cs.codIniziale = :codIniziale
				order by cs.id
			]]>
		</query>
  </named-query>

  <named-query name="CsTbIcd9.findAllCodIniziali">
    <query>
			<![CDATA[
				select distinct cs.codIniziale 
				from CsTbIcd9 cs
				where cs.abilitato = '1'
				order by cs.codIniziale
			]]>
		</query>
  </named-query>

  <named-query name="CsTbIcd9.findCodiciByCodIniziale">
    <query>
			<![CDATA[
				select cs 
				from CsTbIcd9 cs
				where cs.abilitato = '1'
				and cs.codIniziale = :codIniziale
				order by cs.id
			]]>
		</query>
  </named-query>

  <named-query name="CsTbMacroAttivita.findAllAbil">
    <query>
			<![CDATA[
				select distinct cs 
				from CsTbMacroAttivita cs
				left join fetch cs.lstMicroAttivita
				where cs.abilitato = '1'
				order by cs.id
			]]>
		</query>
  </named-query>
  
  <named-query name="CsTbMacroIntervento.findByTipoIntervento">
    <query>
			<![CDATA[
				select rel.csTbMacroIntervento 
				from CsRelMacrointTipoint rel
				where rel.id.tipoInterventoId = :tipoInterventoId
				order by rel.csTbMacroIntervento.pdsmacro
			]]>
		</query>
  </named-query>
  
  <named-query name="CsTbMicroSegnal.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbMicroSegnal cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbMicroAttivita.findAllAbilByIdMacro">
    <query>
			<![CDATA[
				select cs 
				from CsTbMicroAttivita cs
				where cs.abilitato = '1' and cs.macroAttivita is not null 
				      and cs.macroAttivita.id = :idMacro
				order by cs.descrizione
			]]>
		</query>
  </named-query>
  <named-query name="CsTbMicroIntervento.findAllByIdMacro">
    <query>
			<![CDATA[
				select cs 
				from CsTbMicroIntervento cs
				where cs.idMacro is not null and cs.idMacro = :idMacro
				order by cs.pdsMicro
			]]>
		</query>
  </named-query>
 <named-query name="CsTbProbl.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbProbl cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>
  
  <named-query name="CsTbDisabTipologia.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbDisabTipologia cs
				where cs.abilitato = '1'
				order by cs.id
			]]>
		</query>
  </named-query>
  
  <named-query name="CsTbServComunita.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbServComunita cs
				where cs.abilitato = '1'
				order by cs.id
			]]>
		</query>
  </named-query>

  <named-query name="CsTbServLuogoStr.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbServLuogoStr cs
				where cs.abilitato = '1'
				order by cs.id
			]]>
		</query>
  </named-query>

  <named-query name="CsTbServResRetta.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbServResRetta cs
				where cs.abilitato = '1'
				order by cs.id
			]]>
		</query>
  </named-query>

  <named-query name="CsTbServSemiresRetta.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbServSemiresRetta cs
				where cs.abilitato = '1'
				order by cs.id
			]]>
		</query>
  </named-query>

  <named-query name="CsTbBuono.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbBuono cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbEsenzioneRiduzione.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbEsenzioneRiduzione cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipoRetta.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbTipoRetta cs
				where cs.abilitato = '1'
				order by cs.id
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipoComunita.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbTipoComunita cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipoOperatore.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbTipoOperatore cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipoComunita.findByDescrizione">
    <query>
			<![CDATA[
				select cs 
				from CsTbTipoComunita cs
				where cs.descrizione = :descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipoRientriFami.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbTipoRientriFami cs
				where cs.abilitato = '1'
				order by cs.id
			]]>
		</query>
  </named-query>

  <named-query name="CsTbMotivoChiusuraInt.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbMotivoChiusuraInt cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbInterventiUOL.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbInterventiUOL cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipoCirc4.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbTipoCirc4 cs
				where cs.abilitato = '1'
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipoProgetto.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsTbTipoProgetto cs
				where cs.abilitato = true
				order by cs.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsOZonaSoc.findAllAbil">
    <query>
			<![CDATA[
				select s
				from CsOZonaSoc s
				where s.abilitato = '1'
				order by s.nome
			]]>
		</query>
  </named-query>

  <named-query name="CsCTipoIntervento.findAllAbil">
    <query>
			<![CDATA[
				select s
				from CsCTipoIntervento s where s.abilitato = '1'
				order by s.descrizione
			]]>
		</query>
  </named-query>
  
   <named-query name="CsCTipoIntervento.findAll">
    <query>
			<![CDATA[
				select s
				from CsCTipoIntervento s
				order by s.descrizione
			]]>
		</query>
  </named-query>
 
  <named-query name="CsTbAnnoScolastico.findAll">
    <query>
			<![CDATA[
				SELECT c FROM CsTbAnnoScolastico c 
				ORDER BY ordine, descrizione
			]]>
		</query>
  </named-query>
  <named-query name="CsTbScuola.findComuni">
    <query>
			<![CDATA[
				select distinct s.comune
				from CsTbScuola s
				where s.abilitato = '1'
				order by s.comune
			]]>
		</query>
  </named-query>

  <named-query name="CsTbScuola.findByComuneTipo">
    <query>
			<![CDATA[
				select sa
				from CsTbScuolaAnno sa inner join fetch sa.csTbScuola s
				where s.abilitato = '1'
				and s.comune = :comune
				and s.tipoScuolaId = :idTipo
				order by s.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbScuola.findByComuneAnnoTipo">
    <query>
			<![CDATA[
				select sa
				from CsTbScuolaAnno sa inner join fetch sa.csTbScuola s
				where s.abilitato = '1'
				and sa.id.annoId = :anno
				and s.tipoScuolaId = :idTipo
				and s.comune = :comune
				order by s.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbSchedaMultidim.findByTipo">
    <query>
			<![CDATA[
				select s
				from CsTbSchedaMultidim s
				where s.tipo = :idTipo
				order by s.nOrd, s.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbSchedaMultidim.findByTipoCodice">
    <query>
			<![CDATA[
				select s
				from CsTbSchedaMultidim s
				where s.tipo = :idTipo 
				and s.codice= :codice
			]]>
		</query>
  </named-query>
 
 
  <named-query name="CsTbMotivoChiusuraPai.findCodiceSinbaMotivoChiusura">
    <query>
			<![CDATA[
				select mc.codiceEsitoSinba
				from CsTbMotivoChiusuraPai mc
				where mc.descrizione like '%' || :descrizione || '%'
			]]>
		</query>
  </named-query>
 
  <!-- Comunita -->
  <named-query name="CsCComunita.findByDescTipo">
    <query>
			<![CDATA[
				select c 
				from CsCComunita c
				where c.csTbTipoComunita.descrizione=:descrizione
				order by c.sogggiuRagsoc
			]]>
		</query>
  </named-query>

  <!-- Organizzazione -->
  <named-query name="CsOOrganizzazione.findByCodCatastale">
    <query>
			<![CDATA[
				select cs 
				from CsOOrganizzazione cs
				where cs.abilitato = '1' and codCatastale = :codice
			]]>
		</query>
  </named-query>
  
    <named-query name="CsOOrganizzazione.findByCodFittizio">
    <query>
			<![CDATA[
				select cs 
				from CsOOrganizzazione cs
				where cs.abilitato = '1' and codRouting = :codice
			]]>
		</query>
  </named-query>

  <named-query name="CsOOrganizzazione.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsOOrganizzazione cs
				where cs.abilitato = '1'
				order by cs.nome
			]]>
		</query>
  </named-query>

  <named-query name="CsOOrganizzazione.findAllAbilAccesso">
    <query>
			<![CDATA[
				select cs 
				from CsOOrganizzazione cs
				where cs.abilitato = '1' and cs.codRouting is not null
				order by cs.nome
			]]>
		</query>
  </named-query>

  <named-query name="CsOOrganizzazione.findCapofila">
    <query>
         <![CDATA[
            select org 
            from CsOOrganizzazione org
            where org.flagCapofila = 1
         ]]>
      </query>
  </named-query>

  <named-query name="CsOOrganizzazione.eliminaById">
    <query>
			<![CDATA[
				DELETE FROM CsOOrganizzazione cs
				WHERE cs.id = :id
			]]>
		</query>
  </named-query>

  <!-- Settore -->
  <named-query name="CsOSettore.eliminaById">
    <query>
			<![CDATA[
				DELETE FROM CsOSettore cs
				WHERE cs.id = :id
			]]>
		</query>
  </named-query>
  <named-query name="CsRelSettoreCatsoc.eliminaBySettoreId">
    <query>
			<![CDATA[
				DELETE FROM CsRelSettoreCatsoc cs
				WHERE cs.csOSettore.id = :id
			]]>
		</query>
  </named-query>
  <named-query name="CsRelSettoreCsocTipoInter.eliminaBySettoreId">
    <query>
			<![CDATA[
				DELETE FROM CsRelSettCsocTipoInter cs
				WHERE cs.id.scsSettoreId = :id
			]]>
		</query>
  </named-query>

  <!-- Categoria Sociale -->
  <named-query name="CsCCategoriaSociale.findAllAbil">
    <query>
			<![CDATA[
				select cs 
				from CsCCategoriaSociale cs
				where cs.abilitato = '1'
				order by cs.nOrd, cs.id
			]]>
		</query>
  </named-query>

  <named-query name="CsCCategoriaSociale.findAbilByDesc">
    <query>
			<![CDATA[
				select cs 
				from CsCCategoriaSociale cs
				where cs.abilitato = '1' and  upper(cs.descrizione) like :desc
				order by cs.nOrd, cs.id
			]]>
		</query>
  </named-query>

  <named-query name="CsCCategoriaSociale.eliminaCategoriaSocialeById">
    <query>
			<![CDATA[
				DELETE FROM CsCCategoriaSociale c
				WHERE c.id = :id
			]]>
		</query>
  </named-query>

  <!-- Medico -->
  <named-query name="CsCMedico.findAllAbil">
    <query>
			<![CDATA[
				select m 
				from CsCMedico m
				where m.abilitato = '1'
				order by m.cognome, m.nome
			]]>
		</query>
  </named-query>
  <named-query name="CsCMedico.findAllAbilByDenominazione">
    <query>
			<![CDATA[
				select m 
				from CsCMedico m
				where m.abilitato = '1' 
				and (upper(m.cognome)||' '||upper(m.nome)) like ('%'||UPPER(:descrizione)||'%')
				order by m.cognome, m.nome
			]]>
		</query>
  </named-query>
  <named-query name="CsCMedico.findByCodRegionale">
    <query>
			<![CDATA[
				select m 
				from CsCMedico m
				where m.codiceRegionale= :codRegionale
			]]>
		</query>
  </named-query>
  <named-query name="CsVMedico.findByCodReg">
    <query>
			<![CDATA[
				select m 
				from CsVMedico m
				where m.codiceRegionale= :codRegionale
			]]>
		</query>
  </named-query>
  <named-query name="CsCMedico.findByDescrizione">
    <query>
			<![CDATA[
				select m 
				from CsCMedico m
				where (upper(m.cognome)||' '||upper(m.nome)) like ('%'||UPPER(:descrizione)||'%')
			]]>
		</query>
  </named-query>

  <!-- Soggetto -->
  <named-query name="CsASoggetto.findByCF">
    <query>
			<![CDATA[
				select s 
				from CsASoggettoLAZY s inner join fetch s.csACaso c 
				where UPPER(s.csAAnagrafica.cf) = UPPER(:cf)
				order by s.dtIns desc
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggetto.findByCaso">
    <query>
			<![CDATA[
				select s from CsASoggettoLAZY s inner join fetch s.csACaso c
				where s.csACaso.id = :casoId
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggetto.findById">
    <query>
			<![CDATA[
				select s from CsASoggettoLAZY s 
				inner join fetch  s.csACaso c
				inner join fetch s.csAAnagrafica a
				where s.id = :Id
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggetto.findByDenominazione">
    <query>
			<![CDATA[
				select s 
				from CsASoggettoLAZY s inner join fetch s.csACaso c 
				where UPPER(s.csAAnagrafica.cognome) || ' ' || UPPER(s.csAAnagrafica.nome) like '%'|| UPPER(:denominazione) ||'%'
				order by s.csAAnagrafica.cognome, s.csAAnagrafica.nome
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggettoCategoriaSoc.findBySoggetto">
    <query>
			<![CDATA[
				SELECT c 
				FROM CsASoggettoCategoriaSoc c inner join fetch c.csCCategoriaSociale cs
				where c.id.soggettoAnagraficaId = :idSoggetto
				order by c.prevalente desc, c.id.dataFineApp desc
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggettoCategoriaSoc.findAttualiBySoggetto">
    <query>
			<![CDATA[
				SELECT c
				FROM CsASoggettoCategoriaSoc c inner join fetch c.csCCategoriaSociale ccs
				where c.id.soggettoAnagraficaId = :idSoggetto
				and c.id.dataFineApp >= :dtRif
				order by c.prevalente desc, c.id.dataFineApp desc
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggettoCategoriaSoc.eliminaBySoggettoId">
    <query>
			<![CDATA[
				DELETE FROM CsASoggettoCategoriaSoc cs
				WHERE cs.id.soggettoAnagraficaId = :id
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggetto.eliminaSoggettoById">
    <query>
			<![CDATA[
				DELETE FROM CsASoggettoLAZY cs 
				WHERE cs.anagraficaId = :id
			]]>
		</query>
  </named-query>

  <named-query name="CsAAnagrafica.eliminaAnagraficaById">
    <query>
			<![CDATA[
				DELETE FROM CsAAnagrafica cs
				WHERE cs.id = :id
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggettoMedico.findBySoggetto">
    <query>
			<![CDATA[
				select cs 
				from CsASoggettoMedico cs inner join fetch cs.csCMedico m
				where cs.csCMedico.abilitato = '1'
				and cs.id.soggettoAnagraficaId = :idSoggetto
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggettoMedico.eliminaBySoggettoId">
    <query>
			<![CDATA[
				DELETE FROM CsASoggettoMedico cs
				WHERE cs.id.soggettoAnagraficaId = :id
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggettoStatoCivile.findBySoggetto">
    <query>
			<![CDATA[
				select cs 
				from CsASoggettoStatoCivile cs 
				     inner join fetch  cs.csTbStatoCivile sc
				where cs.csTbStatoCivile.abilitato = '1'
				and cs.id.soggettoAnagraficaId = :idSoggetto
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggettoStatoCivileAttuale.findBySoggetto">
    <query>
			<![CDATA[
				select cs 
				from CsASoggettoStatoCivile cs 
				  	inner join fetch  cs.csTbStatoCivile sc
				where cs.csTbStatoCivile.abilitato = '1'
				and cs.id.soggettoAnagraficaId = :idSoggetto
				and sysdate between cs.dataInizioApp and cs.id.dataFineApp
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggettoStatoCivile.eliminaBySoggettoId">
    <query>
			<![CDATA[
				DELETE FROM CsASoggettoStatoCivile cs
				WHERE cs.id.soggettoAnagraficaId = :id
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggettoStatus.findBySoggetto">
    <query>
			<![CDATA[
				select cs 
				from CsASoggettoStatus cs inner join fetch cs.csTbStatus tbs
				where cs.csTbStatus.abilitato = '1'
				and cs.id.soggettoAnagraficaId = :idSoggetto
			]]>
		</query>
  </named-query>

  <named-query name="CsASoggettoStatus.eliminaBySoggettoId">
    <query>
			<![CDATA[
				DELETE FROM CsASoggettoStatus cs
				WHERE cs.id.soggettoAnagraficaId = :id
			]]>
		</query>
  </named-query>

  <!-- Indirizzo -->
  <named-query name="CsAIndirizzo.findBySoggetto">
    <query>
			<![CDATA[
				select i 
				from CsAIndirizzo i
				inner join fetch i.csAAnaIndirizzo ind
				inner join fetch i.csTbTipoIndirizzo tipo
				inner join fetch i.csASoggetto s
				inner join fetch s.csAAnagrafica ana
				where s.anagraficaId = :idSoggetto
			]]>
		</query>
  </named-query>
  
  <named-query name="CsAIndirizzo.findAttualeBySoggettoTipo">
    <query>
			<![CDATA[
				select i 
				from CsAIndirizzo i
				inner join fetch i.csAAnaIndirizzo ind
				inner join fetch i.csTbTipoIndirizzo tipo
				inner join fetch i.csASoggetto s
				inner join fetch s.csAAnagrafica ana
				where s.anagraficaId = :idSoggetto
				and tipo.id = :tipo
				and i.dataFineApp is null
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipoIndirizzo.findAllAbil">
    <query>
			<![CDATA[
				select ti 
				from CsTbTipoIndirizzo ti
				where ti.abilitato = '1'
				order by ti.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsTbTipoContributo.findAllAbil">
    <query>
			<![CDATA[
				select ti 
				from CsTbTipoContributo ti
				where ti.abilitato = '1'
				order by ti.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsAIndirizzo.eliminaBySoggettoId">
    <query>
			<![CDATA[
				DELETE FROM CsAIndirizzo cs
				WHERE cs.csASoggetto.anagraficaId = :id
			]]>
		</query>
  </named-query>

  <named-query name="CsAAnaIndirizzo.eliminaById">
    <query>
			<![CDATA[
				DELETE FROM CsAAnaIndirizzo cs
				WHERE cs.id = :id
			]]>
		</query>
  </named-query>
  
  <named-query name="CsAIndirizzo.getListaComuni">
    <query>
			<![CDATA[
				SELECT DISTINCT ind.csAAnaIndirizzo.comCod, ind.csAAnaIndirizzo.comDes  
				FROM CsAIndirizzo ind
				WHERE ind.csTbTipoIndirizzo.id= :tipo 
				AND NVL(IND.dataFineApp, TO_DATE('31/12/9999','dd/MM/yyyy')) > SYSDATE
				AND ind.csAAnaIndirizzo.comCod IS NOT NULL 
				ORDER BY ind.csAAnaIndirizzo.comDes
			]]>
		</query>
  </named-query>
  
  <named-query name="CsAIndirizzo.getListaNazioni">
    <query>
			<![CDATA[
				SELECT DISTINCT ind.csAAnaIndirizzo.statoCod, ind.csAAnaIndirizzo.statoDes  
				FROM CsAIndirizzo ind
				WHERE ind.csTbTipoIndirizzo.id= :tipo 
				AND NVL(IND.dataFineApp, TO_DATE('31/12/9999','dd/MM/yyyy')) > SYSDATE
				AND ind.csAAnaIndirizzo.statoCod IS NOT NULL and ind.csAAnaIndirizzo.statoCod <> '1'
				ORDER BY ind.csAAnaIndirizzo.statoDes
			]]>
		</query>
  </named-query>
 

  <!-- It Step / Alert -->
  
  <!-- It Step / Alert -->
   <named-query name="CsCfgItStato.findListItems">
    <query>
			<![CDATA[
				SELECT c.id, c.nome 
				FROM CsCfgItStato c order by c.nome
			]]>
		</query>
  </named-query>
  
  <named-query name="CsItStepLAZY.getIterStepLAZYListByCaso">
    <query>
			<![CDATA[
				select its from CsItStepLAZY its
				left join fetch its.csOOperatore1 
				left join fetch its.csOOperatore2 
				left join fetch its.csCfgItStato
				left join fetch its.csOSettore1
				inner join fetch its.csOOrganizzazione1
				inner join fetch its.csOSettore1
				left join fetch its.csOOrganizzazione2
				left join fetch its.csOSettore2
				left join fetch its.csDDiario
				where its.csACasoId = :csACasoId 
				order by its.id desc
			]]>
		</query>
  </named-query>


  <named-query name="CsItStep.getLastIterStepByCaso">
    <query>
			<![CDATA[
				select its from CsItStep its 
				left join fetch its.csOOperatore1 
				left join fetch its.csOOperatore2
				left join fetch its.csCfgItStato
				left join fetch its.csDDiario
				where its.csACaso.id = :idCaso 
				and its.id = (select max(its2.id) from CsItStep its2 where its.csACaso.id=its2.csACaso.id)
			]]>
		</query>
  </named-query>
  
   <named-query name="CsItStep.getFirstIterStepByCaso">
    <query>
			<![CDATA[
				select its from CsItStep its 
				left join fetch its.csOOperatore1 
				left join fetch its.csOOperatore2
				where its.csACaso.id = :idCaso 
				and its.id = (select min(its2.id) from CsItStep its2 where its.csACaso.id=its2.csACaso.id)
			]]>
		</query>
  </named-query>
  
  <named-query name="CsItStepLAZY.getLastIterStepLAZYByCaso">
    <query>
			<![CDATA[
				select its from CsItStepLAZY its 
				left join fetch its.csOOperatore1 o1
				left join fetch its.csOOperatore2 o2
				left join fetch its.csCfgItStato
				left join fetch its.csOSettore1
				inner join fetch its.csOOrganizzazione1
				inner join fetch its.csOSettore1
				left join fetch its.csOOrganizzazione2
				left join fetch its.csOSettore2
				left join fetch its.csDDiario
				left join fetch o1.csOOperatoreAnagrafica
				left join fetch o2.csOOperatoreAnagrafica
				where its.csACasoId = :idCaso 
				and its.id = (select max(its2.id) from CsItStepLAZY its2 where its.csACasoId=its2.csACasoId)
			]]>
		</query>
  </named-query>
  
  <named-query name="CsItStepLAZY.getLastIterStepLAZYByTipoCaso">
    <query>
			<![CDATA[
				select its from CsItStepLAZY its 
				left join fetch its.csOOperatore1 o1
				left join fetch its.csOOperatore2 o2
				left join fetch its.csCfgItStato 
				left join fetch its.csOSettore1
				inner join fetch its.csOOrganizzazione1
				inner join fetch its.csOSettore1
				left join fetch its.csOOrganizzazione2
				left join fetch its.csOSettore2
				left join fetch its.csDDiario
				left join fetch o1.csOOperatoreAnagrafica
				left join fetch o2.csOOperatoreAnagrafica
				where its.csACasoId = :idCaso 
				and its.id = (select max(its2.id) from CsItStepLAZY its2 where its.csACasoId=its2.csACasoId and its2.csCfgItStato.id = :idStato )
			]]>
		</query>
  </named-query>
	
  <named-query name="CsCfgItTransizione.findTransizionesByStatoRuolo">
    <query>
			<![CDATA[
				select itt from CsCfgItRuoloTransizione itgt join itgt.csCfgItTransizione itt 
				where itgt.nomeRuolo LIKE '%'|| UPPER(:nomeRuolo) ||'%'  and itt.csCfgItStatoDa.id = :idStato
			]]>
		</query>
  </named-query>

  <named-query name="CsCfgAttrOption.findAttrOptionByCfgAttr">
    <query>
			<![CDATA[
				select op from CsCfgAttrOption op 
				where op.csCfgAttr.id = :idCfgAttr
				order by op.ordine
			]]>
		</query>
  </named-query>

  <named-query name="CsAlert.getAlertByIdCasoTipo">
    <query>
			<![CDATA[
				select a from CsAlert a
				where a.csACaso.id = :idCaso
				and tipo = :tipo
			]]>
		</query>
  </named-query>
  
  <named-query name="CsAlert.getAlertVisibiliByIdCasoTipoOpeTo">
    <query>
			<![CDATA[
				select a from CsAlert a 
				where a.csACaso.id = :idCaso
				and tipo = :tipo and a.csOpSettore2.id = :opSettoreTo 
				and a.visibile = true
			]]>
		</query>
  </named-query>
  
  <named-query name="CsAlert.findAlertEmail">
    <query>
			<![CDATA[
				select a from CsAlert a 
				where a.emailInviata = false
				order by a.dtIns
			]]>
		</query>
  </named-query>

  <named-query name="CsAlertConfig.getAlertConfigByTipo">
    <query>
			<![CDATA[
				select a from CsAlertConfig a 
				where a.tipo = :tipo
			]]>
		</query>
  </named-query>
  
  <named-query name="CsOOpsettoreAlertConfig.find">
    <query>
			<![CDATA[
				select a from CsOOpsettoreAlertConfig a 
				where a.id.tipoCod = :tipoCod and a.id.operatoreSettoreId = :opSettoreId
			]]>
		</query>
  </named-query>
  
    <named-query name="CsOOpsettoreAlertConfig.findByOpSettore">
    <query>
			<![CDATA[
				select distinct a.id.tipoCod 
				from CsOOpsettoreAlertConfig a 
				where a.id.operatoreSettoreId = :opSettoreId and a.flgNotifica=1
			]]>
		</query>
  </named-query>
  <named-query name="CsOOpSettoreAuthDownload.findByOpSettore">
    <query>
			<![CDATA[
				select distinct a.id.sottocartellaDocId 
				from CsOOpsettoreAuthDownload a 
				where a.id.operatoreSettoreId = :opSettoreId
			]]>
		</query>
  </named-query>
  
  

  <!-- Operatore / Settore -->
  <named-query name="CsOOperatore.findOperatoriByTipoId">
    <query>
			<![CDATA[
				select oto
				from CsOOperatoreTipoOperatore oto
				where oto.csTbTipoOperatore.id = :id
				and oto.csTbTipoOperatore.abilitato = '1'
				order by oto.csOOperatoreSettore.csOOperatore.csOOperatoreAnagrafica.cognome, 
				         oto.csOOperatoreSettore.csOOperatore.csOOperatoreAnagrafica.nome, 
				         oto.csOOperatoreSettore.csOOperatore.username
			]]>
		</query>
  </named-query>

  <named-query name="CsOOperatore.findOperatoriByTipoIdSettore">
    <query>
			<![CDATA[
				select oto
				from CsOOperatoreTipoOperatore oto
				where oto.csTbTipoOperatore.id = :idTipo
				and   oto.csTbTipoOperatore.abilitato = '1'
				and   oto.csOOperatoreSettore.csOSettore.id = :idSettore
				order by oto.csOOperatoreSettore.csOOperatore.csOOperatoreAnagrafica.cognome, 
				         oto.csOOperatoreSettore.csOOperatore.csOOperatoreAnagrafica.nome, 
				         oto.csOOperatoreSettore.csOOperatore.username
			]]>
		</query>
  </named-query>

  <named-query name="CsOOperatore.findOperatoriByTipoDescrizione">
    <query>
			<![CDATA[
				select oto.csOOperatoreSettore.csOOperatore 
				from CsOOperatoreTipoOperatore oto
				where oto.csTbTipoOperatore.descrizione = :descrizione
				and oto.csTbTipoOperatore.abilitato = '1'
				order by oto.csOOperatoreSettore.csOOperatore.username
			]]>
		</query>
  </named-query>

  <named-query name="CsOOperatore.findOperatoriByCatSocialeOrg">
    <query>
			<![CDATA[
				select DISTINCT o
				from CsRelSettoreCatsoc sc, CsOOperatoreSettore os 
				inner join os.csOOperatore o
				inner join fetch o.csOOperatoreAnagrafica ana
				where sc.id.settoreId =  os.csOSettore.id
				and sc.id.categoriaSocialeId = :idCatSociale
				and sc.csOSettore.csOOrganizzazione.codRouting=:codRouting
				order by o.username 
			]]>
		</query>
  </named-query>

<named-query name="CsOOperatoreTipoOperatore.findTipiOperatoreByOperatoreSettore">
    <query>
			<![CDATA[
				select distinct oto.csTbTipoOperatore.descrizione
				from CsOOperatoreTipoOperatore oto
				where oto.csOOperatoreSettore.id IN (:idOperatoreSettore)
				order by oto.csTbTipoOperatore.descrizione
			]]>
		</query>
  </named-query>


  <named-query name="CsOOperatore.findTipoByOperatoreSettore">
    <query>
			<![CDATA[
				select oto
				from CsOOperatoreTipoOperatore oto
				where oto.csOOperatoreSettore.id = :idOpSet
				and oto.dataFineApp >= :dataFineApp
				and oto.csTbTipoOperatore.abilitato = '1'
				order by oto.csTbTipoOperatore.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsOOperatoreTipoOperatore.eliminaTipoOperatoreById">
    <query>
			<![CDATA[
				DELETE FROM CsOOperatoreTipoOperatore oto
				WHERE oto.id = :id
			]]>
		</query>
  </named-query>

  <named-query name="CsOOperatoreTipoOperatore.eliminaTipoOperatoreByIdOperatoreSettore">
    <query>
			<![CDATA[
				DELETE FROM CsOOperatoreTipoOperatore oto
				WHERE oto.csOOperatoreSettore.id = :idOpSet
			]]>
		</query>
  </named-query>

  <named-query name="CsACasoOpeTipoOpe.eliminaCasoOpeTipoOpeByIdOperatoreSettore">
    <query>
			<![CDATA[
				DELETE FROM CsACasoOpeTipoOpe coto
				WHERE coto.operatoreTipoOperatoreId IN 
					(SELECT oto.id FROM CsOOperatoreTipoOperatore oto WHERE oto.csOOperatoreSettore.id = :idOpSet)
			]]>
		</query>
  </named-query>


  <named-query name="CsOOperatore.getOperatoreByUsername">
    <query>
			<![CDATA[
				select it from CsOOperatore it 
				left join fetch it.csOOperatoreAnagrafica ana
				where UPPER(it.username) = UPPER(:username)
			]]>
		</query>
  </named-query>

  <named-query name="CsOOperatoreBASIC.getOperatoreBASICByUserName">
    <query>
			<![CDATA[
				select it from CsOOperatoreBASIC it
				left join fetch it.csOOperatoreAnagrafica ana
				where UPPER(it.username) = UPPER(:username)
			]]>
		</query>
  </named-query>

  <named-query name="CsOOperatore.getOperatoreById">
    <query>
			<![CDATA[
				select it from CsOOperatore it
				left join fetch it.csOOperatoreAnagrafica ana 
				where it.id = :idOp
			]]>
		</query>
  </named-query>

  <named-query name="CsOOperatoreSettore.getOperatoreSettoreById">
    <query>
			<![CDATA[
				select it from CsOOperatoreSettore it 
				where it.csOOperatore.id = :idOp and it.dataFineApp >= :date and it.csOSettore.id = :idSettore
			]]>
		</query>
  </named-query>

  <named-query name="CsOOperatoreSettore.findAll">
    <query>
			<![CDATA[
				select it from CsOOperatoreSettore it
			]]>
		</query>
  </named-query>

  <named-query name="CsOOperatoreSettore.findOperatoreSettoreAnagraficaBySettore">
    <query>
			<![CDATA[
				select distinct 
				it.id, op.id, oana, 
				nvl(it.dataInizioApp, TO_DATE('01/01/0001','dd/MM/yyyy')) as dataInizioApp, 
				nvl(it.dataFineApp,   TO_DATE('31/12/9999','dd/MM/yyyy')) as dataFineApp,  
				op.abilitato
				from CsOOperatoreSettore it
				inner join it.csOOperatore op
				left join op.csOOperatoreAnagrafica oana
				where it.csOSettore.id = :idSettore
			]]>
		</query>
  </named-query>
  
   <named-query name="CsOOperatoreSettore.findRespSettoreAttivo">
    <query>
			<![CDATA[
				select it from CsOOperatoreSettore it 
				where it.csOSettore.id = :idSettore and UPPER(it.amGroup) like ('%'||UPPER(:gruppo)||'%') 
				and it.dataFineApp is not null 
				and sysdate between it.dataInizioApp and it.dataFineApp and it.csOOperatore.abilitato = 1
				order by it.csOOperatore.csOOperatoreAnagrafica.cognome
			]]>
		</query>
  </named-query>
	
  <named-query name="CsOOperatoreSettore.findOperatoreIdAnagraficaBySettore">
	   <query>
				<![CDATA[
					select it.csOOperatore.id, it.dataInizioApp, it.dataFineApp, it.csOOperatore.abilitato, it.csOOperatore.csOOperatoreAnagrafica 
					from CsOOperatoreSettore it 
					where it.csOSettore.id = :idSettore
					order by it.csOOperatore.csOOperatoreAnagrafica.cognome
				]]>
			</query>
  </named-query>
	  
  <named-query name="CsOOperatoreSettore.findOperatoreSettoreByOperatore">
    <query>
			<![CDATA[
				select it from CsOOperatoreSettore it 
				where it.csOOperatore.id = :idOp and it.dataFineApp >= :date
				order by it.csOSettore.csOOrganizzazione.id, it.csOSettore.id
			]]>
		</query>
  </named-query>

 <named-query name="CsOOperatoreSettore.findOperatoreSettoreByUsername">
    <query>
			<![CDATA[
				select it from CsOOperatoreSettore it 
				where it.csOOperatore.username = :username and it.dataFineApp >= :date
				order by it.csOSettore.csOOrganizzazione.id, it.csOSettore.id
			]]>
		</query>
  </named-query>


  <named-query name="CsOOperatoreSettore.eliminaOperatoreSettoreById">
    <query>
			<![CDATA[
				DELETE FROM CsOOperatoreSettore os
				WHERE os.id = :id
			]]>
		</query>
  </named-query>
  
    <named-query name="CsOOpsettoreAlertConfig.eliminaByIdOperatoreSettore">
    <query>
			<![CDATA[
				DELETE FROM CsOOpsettoreAlertConfig os
				WHERE os.id.operatoreSettoreId = :idOpSettore
			]]>
		</query>
  </named-query>

   <named-query name="CsOOpsettoreAlertConfig.setEmailByIdOperatoreSettore">
    <query>
			<![CDATA[
				UPDATE CsOOpsettoreAlertConfig os
				SET os.flgEmail = :abilita
				WHERE os.id.operatoreSettoreId = :idOpSettore
			]]>
		</query>
  </named-query>


  <named-query name="CsOSettore.findAll">
    <query>
			<![CDATA[
				select it from CsOSettore it 
				       INNER JOIN FETCH it.csOOrganizzazione org
				       left join fetch it.csAAnaIndirizzo ind
				order by it.nOrd, org.nome, it.nome
			]]>
		</query>
  </named-query>
  
  <named-query name="CsOSettore.findSettoriInvianteInviatoInCarico">
    <query>
			<![CDATA[
				select it from CsOSettore it 
				       INNER JOIN FETCH it.csOOrganizzazione org
				       left join fetch it.csAAnaIndirizzo ind
				where  (it.flgInviante = 1 or it.flgInviatoA = 1 or it.flgInCaricoA = 1)    
				order by it.nOrd, org.nome, it.nome
			]]>
		</query>
  </named-query>

  <named-query name="CsOSettore.findSettoreBASICByOrganizzazione">
    <query>
			<![CDATA[
				select it from CsOSettoreBASIC it left join fetch it.csAAnaIndirizzo ind
				where it.csOOrganizzazioneId = :idOrganizzazione
				order by it.nOrd, it.nome
			]]>
		</query>
  </named-query>
  
  <!-- SISO-812 -->
   <named-query name="CsOSettore.findSettoreBASICSecondoLivelloByOrganizzazione">
    <query>
			<![CDATA[
				select it from CsOSettoreBASIC it left join fetch it.csAAnaIndirizzo ind
				where it.csOOrganizzazioneId = :idOrganizzazione
				and it.csTbSecondoLivello is not null
				order by it.nOrd, it.nome
			]]>
		</query>
  </named-query>
  
  <named-query name="CsOSettore.findSettoreBASICSenzaSecondoLivelloByOrganizzazione">
    <query>
			<![CDATA[
				select it from CsOSettoreBASIC it left join fetch it.csAAnaIndirizzo ind
				where it.csOOrganizzazioneId = :idOrganizzazione
				and it.csTbSecondoLivello is  null
				order by it.nOrd, it.nome
			]]>
		</query>
  </named-query>
 
  <named-query name="CsOOrganizzazione.findAll">
    <query>
			<![CDATA[
				select it from CsOOrganizzazione it order by it.nome
			]]>
		</query>
  </named-query>

  <!-- Famiglia Gruppo -->
  <named-query name="CsAFamigliaGruppoGit.getFamiglieGruppoGitByProvenienza">
    <query>
			<![CDATA[
				select it from CsAFamigliaGruppoGit it inner join fetch it.csASoggetto s inner join fetch s.csACaso c
				where it.csASoggetto.csAAnagrafica.idOrigWs LIKE :provenienza ||'@%'
			]]>
		</query>
  </named-query>
  
   <!-- SISO-1127 -->
   <named-query name="CsAComponenteAnagCasoGit.getAnagraficaCasoGitByProvenienza">
    <query>
			<![CDATA[
				select it from CsAComponenteAnagCasoGit it inner join fetch it.csASoggetto s inner join fetch s.csACaso c
				where it.csASoggetto.csAAnagrafica.idOrigWs LIKE :provenienza ||'@%'
			]]>
		</query>
  </named-query>
  <!-- SISO-1266 -->
<!--  query di DEBUG-->  
<named-query name="CsAComponenteAnagCasoGit.getAnagraficaSoggettoGitByEscudiProvenienzaId">
    <query>
			<![CDATA[
				select it from CsAComponenteAnagCasoGit it inner join fetch it.csASoggetto s inner join fetch s.csACaso c
				where (it.csASoggetto.csAAnagrafica.idOrigWs IS NULL)  
				AND LENGTH(it.csASoggetto.csAAnagrafica.cf) = 16 order by it.id desc
			]]>
		</query>
  </named-query>
<!-- query originale 
   <named-query name="CsAComponenteAnagCasoGit.getAnagraficaSoggettoGitByEscudiProvenienzaId">
    <query>
			<![CDATA[
				select it from CsAComponenteAnagCasoGit it inner join fetch it.csASoggetto s inner join fetch s.csACaso c
				where (it.csASoggetto.csAAnagrafica.idOrigWs IS NULL)  
				AND LENGTH(it.csASoggetto.csAAnagrafica.cf) = 16 order by it.id desc
			]]>
		</query>
  </named-query>
  -->
   <named-query name="CsAComponenteAnagCasoGit.getAnagraficaCasoGitByIdSoggetto">
    <query>
			<![CDATA[
				select it from CsAComponenteAnagCasoGit it inner join fetch it.csASoggetto s inner join fetch s.csACaso c
				where it.csASoggetto.anagraficaId = :idSoggettoAnagrafica
			]]>
		</query>
  </named-query>
  <named-query name="CsAComponenteAnagCasoGit.getAnagraficheAggiornate">
    <query>
			<![CDATA[
				select distinct it from CsAComponenteAnagCasoGit it inner join fetch it.csASoggetto s inner join fetch s.csACaso c
				where it.flgSegnalazione = true
			]]>
		</query>
  </named-query>
   <named-query name="CsAComponenteAnagCasoGit.getAnagraficaAggiornataBySoggId">
    <query>
			<![CDATA[
				select  it 
				from CsAComponenteAnagCasoGit it 
					 inner join fetch it.csASoggetto s 
					 inner join fetch s.csAAnagrafica ana
					 inner join fetch s.csACaso c
				where s.anagraficaId = :idSoggettoAnagrafica
				  and it.segnalazione is not null and it.segnalazione != '-'
				  and (it.dtMod is not null and it.dtMod > :dtVal)
			]]>
		</query>
  </named-query>
  <!-- SISO-1127 FINE -->
  
  <named-query name="CsAFamigliaGruppoGit.getFamigliaGruppoGitBySoggettoId">
    <query>
			<![CDATA[
				select it from CsAFamigliaGruppoGit it inner join fetch it.csASoggetto s inner join fetch s.csACaso c
				where it.csASoggetto.id = :idSoggetto
			]]>
		</query>
  </named-query>

  <named-query name="CsAFamigliaGruppoGit.getFamigliaGruppoGitAggiornate">
    <query>
			<![CDATA[
				select distinct it from CsAFamigliaGruppoGit it inner join fetch it.csASoggetto s inner join fetch s.csACaso c
				where it.flgSegnalazione = '1'
			]]>
		</query>
  </named-query>
  <named-query name="CsAComponenteGit.deleteByIds">
    <query>
			<![CDATA[
				delete from CsAComponenteGit where id IN (:ids)
			]]>
		</query>
  </named-query>

  <named-query name="CsAFamigliaGruppo.getFamigliaGruppoById">
    <query>
			<![CDATA[
				select it from CsAFamigliaGruppo it 
				inner join fetch it.csASoggetto s 
				inner join fetch s.csACaso c
				left join fetch it.csAComponentes comps
				where it.id = :id
			]]>
		</query>
  </named-query>

  <named-query name="CsAFamigliaGruppo.getFamigliaGruppoBySoggettoId">
    <query>
			<![CDATA[
				select it from CsAFamigliaGruppo it 
				inner join fetch it.csASoggetto s 
				inner join fetch s.csACaso c
				where it.csASoggetto.anagraficaId = :idSoggetto
				order by it.dataFineApp desc, it.dataInizioApp desc
			]]>
		</query>
  </named-query>
  
   <named-query name="CsAFamigliaGruppo.getIdsFamigliaGruppoBySoggettoId">
    <query>
			<![CDATA[
				select distinct fg.id 
				from CsAFamigliaGruppo fg  
				where fg.csASoggetto.anagraficaId = :anagraficaId
			]]>
		</query>
  </named-query>
 
   <named-query name="CsAComponente.getComponentiAllaDataBySoggettoId">
    <query>
			<![CDATA[
				select c 
				from CsAComponente c 
				inner join fetch c.csAAnagrafica ana
				left join fetch c.csTbContatto contatto
				left join fetch c.csTbDisponibilita disponibilita
				left join fetch c.csTbPotesta potesta
				left join fetch c.csTbTipoRapportoCon rapporto
				left join fetch c.csAFamigliaGruppo fg
				left join fetch fg.csASoggetto sogg
				left join fetch sogg.csAAnagrafica anaCaso
				where sogg.id = :idSoggetto 
				and :dtVal between fg.dataInizioApp and fg.dataFineApp
			]]>
		</query>
  </named-query>
  
  <named-query name="CsAFamigliaGruppo.getAnaSoggettoFamiglieGruppo">
    <query>
			<![CDATA[
				select distinct fg.csASoggetto 
				from CsAFamigliaGruppo fg 
					JOIN FETCH fg.csASoggetto.csACaso 
				where fg.id IN :famigliaIds
			]]>
		</query>
  </named-query>
  
  <named-query name="CsAFamigliaGruppo.getAnaComponentiGiaFamigliariSoggettoCf">
    <query>
			<![CDATA[
				select comp from CsAFamigliaGruppo fg inner join fg.csAComponentes comp
				where fg.id IN :famigliaIds 
				and comp.csAAnagrafica.cf!= :cfSoggetto
				order by comp.csAAnagrafica.cognome, comp.csAAnagrafica.nome, comp.id desc
			]]>
		</query>
  </named-query>

  <named-query name="CsAFamigliaGruppo.eliminaFamigliaGruppoById">
    <query>
			<![CDATA[
				DELETE FROM CsAFamigliaGruppo cs
				WHERE cs.id = :id
			]]>
		</query>
  </named-query>

  <named-query name="CsAComponente.eliminaComponenteById">
    <query>
			<![CDATA[
				DELETE FROM CsAComponente cs
				WHERE cs.id = :id
			]]>
		</query>
  </named-query>

  <named-query name="CsAComponente.getComponenteNotInByFamigliaGruppoId">
    <query>
			<![CDATA[
				SELECT cs FROM CsAComponente cs
				WHERE cs.csAFamigliaGruppo.id = :id
				AND cs.id NOT IN (:listaId)
			]]>
		</query>
  </named-query>

  <!-- Dati Disabilità -->
  <named-query name="CsADisabilita.getDisabilitaBySoggettoId">
    <query>
			<![CDATA[
				select it from CsADisabilita it 
				where it.csASoggetto.anagraficaId = :idSoggetto
				order by it.dataFineApp desc, dataInizioApp desc
			]]>
		</query>
  </named-query>

  <named-query name="CsADisabilita.eliminaDisabilitaById">
    <query>
			<![CDATA[
				DELETE FROM CsADisabilita cs
				WHERE cs.id = :id
			]]>
		</query>
  </named-query>

  <!-- Dati Sociali -->
  <named-query name="CsADatiSociali.getSocialiBySoggettoId">
    <query>
			<![CDATA[
				select it from CsADatiSociali it 
				where it.csASoggetto.anagraficaId = :idSoggetto
				order by it.dataFineApp desc, dataInizioApp desc
			]]>
		</query>
  </named-query>
  
  <named-query name="CsADatiSociali.getSocialiBySoggettoCf">
    <query>
			<![CDATA[
				select it from CsADatiSociali it 
				where it.csASoggetto.csAAnagrafica.cf = :cfSoggetto
				order by it.dataFineApp desc, dataInizioApp desc
			]]>
		</query>
  </named-query>
  <named-query name="CsADatiSociali.getSocialiAttiviBySoggettoCf">
    <query>
			<![CDATA[
				select it from CsADatiSociali it 
				where it.csASoggetto.csAAnagrafica.cf = :cfSoggetto
				and sysdate between it.dataInizioApp and it.dataFineApp
				order by it.dataFineApp desc, dataInizioApp desc
			]]>
		</query>
  </named-query>
  

  <named-query name="CsADatiSociali.eliminaSocialiById">
    <query>
			<![CDATA[
				DELETE FROM CsADatiSociali cs
				WHERE cs.id = :id
			]]>
		</query>
  </named-query>
    
   <named-query name="CsExtraFseSiru.eliminaById">
    <query>
			<![CDATA[
				DELETE FROM CsExtraFseSiru s
				WHERE s.id = :id
			]]>
		</query>
  </named-query>
  
  <named-query name="CsExtraFseDatiLavoro.eliminaByIdMast">
    <query>
			<![CDATA[
				DELETE FROM CsExtraFseDatiLavoro s
				WHERE s.master.id = :id
			]]>
		</query>
  </named-query>
  
   <named-query name="CsExtraFseMast.eliminaById">
    <query>
			<![CDATA[
				DELETE FROM CsExtraFseMast mast
				WHERE mast.id = :id
			]]>
		</query>
  </named-query>
  
  <named-query name="CsExtraFseDatiLavoro.findDatiPorUdcBySchedaId">
   	<query>
		<![CDATA[
			SELECT m from CsExtraFseDatiLavoro m
			WHERE m.master.tipo = :tipo and  m.master.schedaId = :schedaId
			ORDER BY m.dtIns desc
		]]>
	</query>
 </named-query>

	

  <!-- Dati Invalidita -->
  <named-query name="CsADatiInvalidita.getInvaliditaBySoggettoId">
    <query>
			<![CDATA[
				select it from CsADatiInvalidita it 
				where it.csASoggetto.anagraficaId = :idSoggetto
				order by it.dataFineApp desc, dataInizioApp desc
			]]>
		</query>
  </named-query>
  <named-query name="CsADatiInvalidita.getInvaliditaBySoggettoIdAllaData">
    <query>
			<![CDATA[
				select it from CsADatiInvalidita it 
				where it.csASoggetto.anagraficaId = :idSoggetto
				and :dtRif between it.dataInizioApp and it.dataFineApp
				order by it.dataFineApp desc, dataInizioApp desc
			]]>
		</query>
  </named-query>
  

  <named-query name="CsADatiInvalidita.eliminaInvaliditaById">
    <query>
			<![CDATA[
				DELETE FROM CsADatiInvalidita cs
				WHERE cs.id = :id
			]]>
		</query>
  </named-query>

  <!-- Dati Tribunale -->
  <named-query name="CsATribunale.getTribunaleBySoggettoId">
    <query>
			<![CDATA[
				select it from CsATribunale it 
				where it.csASoggetto.anagraficaId = :idSoggetto
				order by it.dataFineApp desc, dataInizioApp desc
			]]>
		</query>
  </named-query>

  <named-query name="CsATribunale.eliminaTribunaleById">
    <query>
			<![CDATA[
				DELETE FROM CsATribunale cs
				WHERE cs.id = :id
			]]>
		</query>
  </named-query>

  <!-- Diario -->
  <named-query name="CsDDiario.getDiarioByCasoId">
    <query>
			<![CDATA[
				select it from CsDDiario it 
				where it.csACaso.id = :casoId
			]]>
		</query>
  </named-query>
  
  <named-query name="CsDDiario.getDiarioBySchedaId">
    <query>
			<![CDATA[
				select it from CsDDiario it 
				where it.schedaId = :schedaId
			]]>
		</query>
  </named-query>
  

  <named-query name="CsDDiario.deleteDiario">
    <query>
			<![CDATA[
				delete from CsDDiario d where d.id = :idDiario
			]]>
		</query>
  </named-query>

  <named-query name="CsDClob.delete">
    <query>
			<![CDATA[
				delete from CsDClob d where d.id = :idClob
			]]>
		</query>
  </named-query>

  <named-query name="CsDValutazione.delete">
    <query>
			<![CDATA[
				delete from CsDValutazione d where d.diarioId = :idDiario
			]]>
		</query>
  </named-query>

  <named-query name="CsDColloquioBASIC.findByCasoId">
    <query>
			<![CDATA[
				SELECT c FROM CsDColloquioBASIC c
				INNER JOIN FETCH c.csDDiario d
				INNER JOIN FETCH d.csACaso cs
				INNER JOIN FETCH cs.csASoggetto sg
				LEFT JOIN FETCH c.csCDiarioConchi
				LEFT JOIN FETCH c.csCDiarioDove
				LEFT JOIN FETCH c.csCTipoColloquio
				WHERE cs.id=:casoId 
				ORDER BY d.dtAmministrativa desc, nvl(d.dtMod, d.dtIns) desc
			]]>
		</query>
  </named-query>

  <named-query name="CsDValutazione.findAllSchedeValutazione">
    <query>
			<![CDATA[
				select v from CsDValutazione v 
						inner join fetch v.csDDiario d 
						inner join fetch d.csOOperatoreSettore os
				where d.csTbTipoDiario.id= :tipoDiarioId
			]]>
		</query>
  </named-query>
  
  <named-query name="CsCTipoColloquio.findAllTipoColloquios">
    <query>
			<![CDATA[
				select it from CsCTipoColloquio it order by it.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsCDiarioDove.findAllDiarioDoves">
    <query>
			<![CDATA[
				select it from CsCDiarioDove it order by it.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsCDiarioConchi.findAllDiarioConchis">
    <query>
			<![CDATA[
				select it from CsCDiarioConchi it order by it.descrizione
			]]>
		</query>
  </named-query>
  
    <named-query name="CsCDiarioConchi.findByIds">
    <query>
			<![CDATA[
				select it from CsCDiarioConchi it where it.id in :listaIds order by it.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsDDiarioDoc.findDiarioDocById">
    <query>
			<![CDATA[
				select cs from CsDDiarioDoc cs 
				where cs.id.diarioId = :idDiario
			]]>
		</query>
  </named-query>

  <named-query name="CsDDiarioDoc.deleteDiarioDocByIdDocumento">
    <query>
			<![CDATA[
				delete from CsDDiarioDoc d where d.id.documentoId = :idDocumento
			]]>
		</query>
  </named-query>

  <named-query name="CsDPai.deletePAIByIdDiario">
    <query>
			<![CDATA[
				delete from CsDPai d where d.diarioId = :idDiario
			]]>
		</query>
  </named-query>

  <named-query name="CsDPai.findPaiByCaso">
    <query>
      <![CDATA[
        select r from CsDPai r 
        	inner join fetch r.csDDiario d 
        	inner join fetch d.csOOperatoreSettore os
        where  d.csACaso.id=:idCaso 
        order by d.dtAmministrativa desc
      ]]>
    </query>
  </named-query>
  <named-query name="CsDPai.findPaiAperti">
    <query>
      <![CDATA[
        select r from CsDPai r
        where  (r.csDDiario.dtChiusuraDa IS NULL OR r.csDDiario.dtChiusuraDa >= sysdate)
      ]]>
    </query>
  </named-query>
 
  <named-query name="CsDPai.findSintesiById">
    <query>
      <![CDATA[
        select distinct r.csTbTipoPai.descrizione, r.csDDiario.dtAttivazioneDa , r.csDDiario.dtChiusuraDa
        from CsDPai r 
        where r.diarioId = :diarioId
      ]]>
    </query>
  </named-query>
    <named-query name="CsPaiMastSogg.findSoggettiPaiSenzCaso">
    <query>
      <![CDATA[
      	 select pms from CsPaiMastSogg pms 
		 where pms.casoId is null and exists 
		 (select 1 from CsASoggettoLAZY s where upper(s.csAAnagrafica.cf) = upper(pms.cf))
		 order by pms.cf
      ]]>
    </query>
  </named-query>
  
  
  
  <!-- <named-query name="CsDRelazione.findRelazioniPaiExt">
		<query>
			<![CDATA[
				select r from CsDRelazione r inner join fetch r.csDDiario d inner join fetch r.csTbTipoDiario td
				where  td.tipoDiario.id = 6
			]]>
		</query>
	</named-query> -->


	<named-query name="CsDRelazione.findByIds">
		<query>
			<![CDATA[
				select r from CsDRelazione r 
						inner join fetch r.csDDiario d 
						inner join fetch d.csOOperatoreSettore os
				where  d.id in :listaId 
				order by d.dtAmministrativa desc
			]]>
		</query>
  </named-query>

	<named-query name="CsDRelazione.findRelazioniByCaso">
		<query>
			<![CDATA[
				select r from CsDRelazione r 
						inner join fetch r.csDDiario d 
						inner join fetch d.csOOperatoreSettore os
				where  d.csACaso.id=:idCaso 
				order by d.dtAmministrativa desc
			]]>
		</query>
  </named-query>
  
  	<named-query name="CsDRelazione.findRelazioniSintesiByCaso">
		<query>
			<![CDATA[
				select distinct r.diarioId, r.csDDiario.dtAmministrativa, 
				r.situazioneAmb, r.situazioneParentale, r.situazioneSanitaria, r.proposta, 
				r.macroAttivita.descrizione, r.microAttivita.descrizione, r.microAttivita.flagTipoForm
				from CsDRelazione r 
				where  r.csDDiario.csACaso.id=:idCaso 
				order by r.csDDiario.dtAmministrativa desc
			]]>
		</query>
  </named-query>
	
	<named-query name="CsDRelazione.findRelazioniInScadenza">
		<query>
			<![CDATA[
				select r from CsDRelazione r inner join fetch r.csDDiario d inner join fetch d.csOOperatoreSettore os
				where  r.dataProssimaRelazioneDal<= sysdate
				and not exists (select 1 from CsDDiario d1 where d1.csTbTipoDiario.id=6 and d.csACaso.id=d1.csACaso.id and r.dataProssimaRelazioneDal<= d1.dtAmministrativa)
				order by d.csACaso.id, d.dtAmministrativa desc, d.dtIns desc
			]]>
		</query>
	</named-query>

  <named-query name="CsLoadDocumento.findLoadDocumentoByDiarioId">
    <query>
			<![CDATA[
				select d.csLoadDocumento 
				from CsDDiarioDoc d
				where d.csDDIario.id = :idDiario
			]]>
		</query>
  </named-query>

  <named-query name="CsDDocIndividuale.deleteDocIndividualeByIdDiario">
    <query>
			<![CDATA[
				delete from CsDDocIndividuale d where d.diarioId = :idDiario
			]]>
		</query>
  </named-query>

  <named-query name="CsFlgIntervento.getListaInterventiByIdCaso">
    <query>
			<![CDATA[
				select distinct i 
				from CsIIntervento i
				left join fetch i.csFlgInterventos f 
				left join fetch f.csDDiario d
				left join fetch d.csACaso c
				left join fetch c.csASoggetto s
				left join fetch s.csAAnagrafica anac
				left join fetch i.csIQuota q
				left join fetch i.csIInterventoPr pr
				left join fetch pr.csIInterventoPrFse fse
				left join fetch pr.csIInterventoPrFseSiru siru
				left join fetch i.csRelSettCsocTipoInter rel
				left join fetch rel.csRelCatsocTipoInter csocinter
				left join fetch rel.csRelSettoreCatsoc setcsoc
				left join fetch i.csIInterventoCustom custom
				where c.id=:casoId 
				order by i.dtIns desc
			]]>
		</query>
  </named-query>
  <named-query name="CsFlgIntervento.countInterventiByIdCaso">
    <query>
			<![CDATA[
				select count(distinct f.csIIntervento.id) from CsFlgIntervento f 
				where f.csDDiario.csACaso.id=:casoId
			]]>
		</query>
  </named-query>
  

<!-- SISO-812 -->
<named-query name="CsACasoAccessoFascicolo.findByCasoId">
    <query>
			<![CDATA[
				select d from CsACasoAccessoFascicolo d 
				left join fetch d.csOSettore s
				left join fetch d.csOOrganizzazione o
				left join fetch s.csTbSecondoLivello tb
				left join fetch s.csAAnaIndirizzo ind
				where d.casoId = :casoId 
				order by d.dataInizioSys
			]]>
		</query>
  </named-query>
  
  <!-- SISO-812 -->
  <named-query name="CsACasoAccessoFascicolo.findAttualiBySettoreOrganizzazione">
    <query>
			<![CDATA[
				select d from CsACasoAccessoFascicolo d 
				where d.idOrganizzazione = :idOrganizzazione 
				and d.idSettore = :idSettore 
				and sysdate between d.dataInizioApp and d.dataFineApp
				order by d.dataInizioSys
			]]>
		</query>
  </named-query>
  
  <!-- SISO-812 -->
  <named-query name="CsACasoAccessoFascicolo.findAttualiByCasoSettoreOrganizzazione">
    <query>
			<![CDATA[
				select d from CsACasoAccessoFascicolo d where d.casoId = :idCaso 
				and d.idOrganizzazione = :idOrganizzazione
				and d.idSettore = :idSettore 
				and sysdate between d.dataInizioApp and d.dataFineApp
				order by d.dataInizioApp
			]]>
		</query>
  </named-query>
  
<named-query name="CsACasoAccessoFascicolo.deleteByCasoId">
    <query>
			<![CDATA[
				delete from CsACasoAccessoFascicolo d where d.casoId  = :casoId
			]]>
		</query>
  </named-query>
  
  <named-query name="CsFlgIntervento.deleteById">
    <query>
			<![CDATA[
				delete from CsFlgIntervento d where d.diarioId = :idDiario
			]]>
		</query>
  </named-query>

  <named-query name="CsIIntervento.deleteById">
    <query>
			<![CDATA[
				delete from CsIIntervento d where d.id = :idIntervento
			]]>
		</query>
  </named-query>

  <named-query name="CsLoadDocumento.deleteLoadDocumentoById">
    <query>
			<![CDATA[
				delete from CsLoadDocumento d where d.id = :id
			]]>
		</query>
  </named-query>

  <named-query name="CsSsSchedaSegr.findSchedaSegrBySchedaIdProvenienza">
    <query>
			<![CDATA[
				select s from CsSsSchedaSegr s where s.schedaId = :schedaId and s.provenienza = :provenienza
			]]>
		</query>
  </named-query>
  
  <named-query name="CsSsSchedaSegr.findByIdAnagraficaStato">
    <query>
			<![CDATA[
				select s from CsSsSchedaSegr s  
				     left join fetch s.csASoggetto sogg
				     left join fetch s.tbProvenienza prov
				where sogg.anagraficaId = :idAnagrafica and s.stato=:stato
				order by s.dtIns desc
			]]>
		</query>
  </named-query>

  <named-query name="CsSsSchedaSegr.findByIdAnagraficaNotSS">
    <query>
			<![CDATA[
				select s from CsSsSchedaSegr s where s.csASoggetto.anagraficaId = :idAnagrafica and s.provenienza != :provenienza
			]]>
		</query>
  </named-query>
  
	<!-- SISO-938 -->
	<named-query name="CsSchedeAltraProvenienza.findVistaCasiAltriBySchedaIdProvenienza">
		<query>
			<![CDATA[
				select s from CsSchedeAltraProvenienza s where s.idSchedaSegr = :idSchedaSegr and s.provenienza = :provenienza
			]]>
		</query>
	</named-query>
	
  <named-query name="CsDValutazione.findValutazioneById">
    <query>
			<![CDATA[
				select v from CsDValutazione v 
				where v.id = :idValutazione
			]]>
		</query>
  </named-query>


  <named-query name="CsDValutazione.findValutazioneBySoggetto">
    <query>
			<![CDATA[
	             SELECT v FROM CsDValutazione v inner join fetch v.csDDiario d inner join fetch d.csOOperatoreSettore os
				 WHERE d.csACaso.csASoggetto.anagraficaId = :anagraficaId
				 AND d.csTbTipoDiario.id = :tipoDiarioId
				 ORDER BY d.dtAmministrativa DESC
			]]>
		</query>
  </named-query>
  <named-query name="CsDValutazione.findValutazioneByUdcId">
    <query>
			<![CDATA[
	             SELECT v FROM CsDValutazione v 
				 WHERE v.csDDiario.schedaId = :schedaId
				 AND v.csDDiario.csTbTipoDiario.id IN (:tipoDiarioId)
				 ORDER BY v.csDDiario.dtAmministrativa DESC
			]]>
		</query>
  </named-query>

  <named-query name="CsDValutazione.findClobById">
    <query>
			<![CDATA[
				select clb from CsDClob clb 
				where clb.id = :idClob
			]]>
		</query>
  </named-query>

  <named-query name="CsDScuola.findScuolaByCaso">
    <query>
			<![CDATA[
				select i.diarioId,i.grado, i.note, i.nome, anno.descrizione, tipo.descrizione, 
				nvl(i.csDDiario.dtMod,i.csDDiario.dtIns), 
				nvl(i.csDDiario.usrMod, i.csDDiario.userIns),
				scuola,
				i.csDDiario.visSecondoLivello,
				i.csDDiario.csOOperatoreSettore.csOSettore.id
				from CsDScuola i 
				left join i.csTbAnnoScolastico anno
				left join i.csTbTipoScuola tipo
				left join i.csTbScuola scuola
				where i.csDDiario.csACaso.id=:idCaso 
				order by anno.ordine desc
			]]>
		</query>
  </named-query>

  <named-query name="CsDScuola.deleteScuolaByIdDiario">
    <query>
			<![CDATA[
				delete from CsDScuola d where d.diarioId = :idDiario
			]]>
		</query>
  </named-query>

  <named-query name="CsDIsee.findIseeByCaso">
    <query>
			<![CDATA[
				select i from CsDIsee i INNER JOIN FETCH i.tipoIsee tipo
				where i.csDDiario.csACaso.id=:idCaso
				order by i.annoRif, tipo.descrizione
			]]>
		</query>
  </named-query>
  
   <named-query name="CsDIsee.findIseeAttiveByCaso">
    <query>
			<![CDATA[
				select i from CsDIsee i INNER JOIN FETCH i.tipoIsee tipo
				where i.csDDiario.csACaso.id=:idCaso
				and i.csDDiario.dtChiusuraDa > sysdate
				order by i.annoRif, tipo.descrizione
			]]>
		</query>
  </named-query>
  
  <named-query name="CsDIsee.findSintesiByCaso">
    <query>
			<![CDATA[
				select i.diarioId, i.annoRif, i.tipoIsee.descrizione 
				from CsDIsee i
				where i.csDDiario.csACaso.id=:idCaso
				order by i.annoRif, i.tipoIsee.descrizione
			]]>
		</query>
  </named-query>

  <named-query name="CsDIsee.deleteIseeByIdDiario">
    <query>
			<![CDATA[
				delete from CsDIsee d where d.diarioId = :idDiario
			]]>
		</query>
  </named-query>

 <named-query name="CsDSina.deleteSinaEsegById">
    <query>
			<![CDATA[
				delete from CsDSinaEseg sinaEseg where sinaEseg.csDSina.id = :idSina
			]]>
		</query>
  </named-query>
  <named-query name="CsDSina.getSinaByDiarioId">
    <query>
			<![CDATA[
				select sina from CsDSina sina
				LEFT JOIN sina.csDSinaEseg sinaEsegs
				LEFT JOIN sinaEsegs.csTbSinaDomanda domanda
				LEFT JOIN sinaEsegs.csTbSinaRisposta risposta
				where sina.csDDiario.id  = :idDiario
				ORDER BY domanda.id asc
			]]>
		</query>
  </named-query>
  
   <named-query name="CsDSina.getSinaEsegBySinaId">
    <query>
			<![CDATA[
				select sinaEseg from CsDSinaEseg sinaEseg
				where sinaEseg.csDSina.id  = :idSina
				
			]]>
		</query>
  </named-query>
  
      <named-query name="CsDSinaLIGHT.getSinaByMastId">
    <query>
			<![CDATA[
				select sinaEseg from CsDSinaLIGHT sinaEseg
				where sinaEseg.interventoEsegMastId in (:ids) 
				and nvl(sinaEseg.data,TO_DATE('31/12/9999','dd/MM/yyyy')) =    
					(select max(nvl(b.data,TO_DATE('31/12/9999','dd/MM/yyyy'))) from CsDSinaLIGHT b where b.interventoEsegMastId = sinaEseg.interventoEsegMastId)
			]]>
		</query>
  </named-query>
  <named-query name="CsTbTipoAbitazione.findAll">
    <query>
			<![CDATA[
				select tipoab
				from CsTbTipoAbitazione tipoab
				order by tipoab.id
			]]>
		</query>
  </named-query>
  
  <named-query name="CsTbAbitTitoloGodimento.findAll">
    <query>
			<![CDATA[
				select titolo
				from CsTbAbitTitoloGodimento titolo
				order by titolo.id
			]]>
		</query>
  </named-query>

  <named-query name="CsDSina.getSinaById">
    <query>
			<![CDATA[
				select sina from CsDSina sina
				LEFT JOIN sina.csDSinaEseg sinaEsegs
				LEFT JOIN sinaEsegs.csTbSinaDomanda domanda
				LEFT JOIN sinaEsegs.csTbSinaRisposta risposta
				where sina.id  = :idSina
				ORDER BY domanda.id asc
			]]>
		</query>
  </named-query>
  
    <!-- inizio SISO-884 -->
   <named-query name="CsDSina.getSinaByInterventoEsegMastId">
    <query>
			<![CDATA[
				select sina from CsDSina sina
				where sina.csIInterventoEsegMast.id  = :interventoEsegMastId
			]]>
		</query>
  </named-query>
  
 <named-query name="CsDSina.setNullMastId">
    <query>
			<![CDATA[
				UPDATE CsDSina SET csIInterventoEsegMast = null  WHERE id = :id		
			]]>
		</query>
  </named-query>
  
  <named-query name="CsIInterventoEsegMast.setNullDiarioPaiId">
    <query>
			<![CDATA[
				UPDATE CsIInterventoEsegMast SET diarioPaiId = null  WHERE id = :id		
			]]>
		</query>
  </named-query>
  <!-- fine SISO-884 -->
  <named-query name="CsDSina.deleteSinaById">
    <query>
			<![CDATA[
				delete from CsDSina sina where sina.id = :idSina
			]]>
	</query>
  </named-query>


  <named-query name="CsDSina.findSinaByMastId">
    <query>
			<![CDATA[
				select sina from CsDSina sina where sina.csIInterventoEsegMast.id = :mastId order by sina.data desc
			]]>
	</query>
  </named-query>
  
  <named-query name="CsDSina.findSinaByCaso">
    <query>
			<![CDATA[
				select sina from CsDSina sina where sina.csDDiario.csACaso.id = :casoId order by sina.data desc
			]]>
	</query>
  </named-query>
  
  <named-query name="CsDSina.findMinDateCollegatiByMastId">
    <query>
			<![CDATA[
				select sina.csDDiario.dtAmministrativa from CsDSina sina where sina.csIInterventoEsegMast.id = :mastId order by sina.csDDiario.dtAmministrativa asc
			]]>
	</query>
  </named-query>
  
  <!-- SISO-928 -->
  <named-query name="CsDSina.findSinaCollegabiliByCF">
    <query>
			<![CDATA[
				select sina 
				from CsDSina sina, CsIInterventoEsegMastSogg sogg
				where sina.csIInterventoEsegMast.id = sogg.master.id
				and sina.csIInterventoEsegMast.id != :mastId
				and UPPER(sogg.id.cf) = UPPER(:cf) 
				and sogg.riferimento = 1
				order by sina.data desc
			]]>
	</query>
  </named-query>
  
  
  <!-- Relazioni CatSociale/Settore/TipoInt -->
  <named-query name="CsRelSettCsocTipoInter.findTipiInterventoSettCatsoc">
    <query>
			<![CDATA[
				select distinct rel.csRelCatsocTipoInter.csCTipoIntervento 
				from CsRelSettCsocTipoInter rel 
				where rel.abilitato= 1 and rel.csRelCatsocTipoInter.csCTipoIntervento.abilitato='1'
				and rel.id.scsSettoreId = :idSettore 
				and rel.id.scsCategoriaSocialeId IN (:idCatsoc)
			]]>
		</query>
  </named-query>
  
  <named-query name="CsRelCatsocTipoInter.findRelCatsocTipointerByCatSoc">
    <query>
			<![CDATA[
				select DISTINCT rel from CsRelCatsocTipoInter rel
				where rel.id.categoriaSocialeId = :idCatsoc
			]]>
		</query>
  </named-query>

  <named-query name="CsRelCatsocTipoInter.eliminaRelCatsocTipointerByIds">
    <query>
			<![CDATA[
				DELETE FROM CsRelCatsocTipoInter rel
				where rel.id.categoriaSocialeId = :idCatsoc
				and rel.id.tipoInterventoId = :idTipointer
			]]>
		</query>
  </named-query>

  <named-query name="CsRelSettoreCatsoc.findRelSettoreCatsocByCatSoc">
    <query>
			<![CDATA[
				select DISTINCT rel from CsRelSettoreCatsoc rel
				where rel.id.categoriaSocialeId = :idCatsoc
			]]>
		</query>
  </named-query>

  <named-query name="CsRelSettoreCatsoc.findRelSettoreCatsocBySettore">
    <query>
			<![CDATA[
				select DISTINCT rel, csoc.nOrd 
				from CsRelSettoreCatsoc rel 
				inner join fetch rel.csCCategoriaSociale csoc
				where rel.id.settoreId = :idSettore
				order by csoc.nOrd
			]]>
		</query>
  </named-query>

  <named-query name="CsRelSettoreCatsoc.eliminaRelSettoreCatsocByIds">
    <query>
			<![CDATA[
				DELETE FROM CsRelSettoreCatsoc rel
				where rel.id.categoriaSocialeId = :idCatsoc
				and rel.id.settoreId = :idSettore
			]]>
		</query>
  </named-query>

  <named-query name="CsRelSettCsocTipoInter.findRelSettCatsocTipoInterByCatSoc">
    <query>
			<![CDATA[
				select DISTINCT rel from CsRelSettCsocTipoInter rel
				where rel.id.scsCategoriaSocialeId = :idCatsoc
				order by rel.id.scsSettoreId, rel.id.cstiTipoInterventoId
			]]>
		</query>
  </named-query>

  <named-query name="CsRelSettCsocTipoInter.eliminaRelSettoreCsocTipointerByIds">
    <query>
			<![CDATA[
				DELETE FROM CsRelSettCsocTipoInter rel
				where rel.id.scsCategoriaSocialeId = :idCatsoc
				and rel.id.scsSettoreId = :idSettore
				and rel.id.cstiTipoInterventoId = :idTipointer
			]]>
		</query>
  </named-query>


  <named-query name="CsRelRelazioneTipoint.deleteByIdRelazione">
    <query>
			<![CDATA[
				delete from CsRelRelazioneTipoint cs where cs.id.relazioneDiarioId = :idRelazione
			]]>
		</query>
  </named-query>

  <named-query name="CsRelSettCatsocEsclusiva.findRelSettCatsocEsclusivaByTipoDiarioId">
    <query>
			<![CDATA[
				select rel from CsRelSettCatsocEsclusiva rel 
				where rel.id.tipoDiarioId = :tipoDiarioId
				and rel.abilitato = '1'
			]]>
		</query>
  </named-query>

  <named-query name="CsRelSettCatsocEsclusiva.findRelSettCatsocEsclusivaByCatSoc">
    <query>
			<![CDATA[
				select rel from CsRelSettCatsocEsclusiva rel 
				where rel.id.categoriaSocialeId = :catSocId
				order by rel.id.settoreId, rel.id.tipoDiarioId 
			]]>
		</query>
  </named-query>

  <named-query name="CsRelSettCatsocEsclusiva.findRelSettCatsocEsclusivaByIds">
    <query>
			<![CDATA[
				select rel from CsRelSettCatsocEsclusiva rel 
				where rel.id.tipoDiarioId = :tipoDiarioId
				and rel.id.categoriaSocialeId = :categoriaSocialeId
				and rel.id.settoreId = :settoreId
				and rel.abilitato = '1'
			]]>
		</query>
  </named-query>

  <named-query name="CsRelSettCatsocEsclusiva.deleteRelSettCatsocEsclusivaByIds">
    <query>
			<![CDATA[
				delete from CsRelSettCatsocEsclusiva rel 
				where rel.id.tipoDiarioId = :tipoDiarioId
				and rel.id.categoriaSocialeId = :categoriaSocialeId
				and rel.id.settoreId = :settoreId
			]]>
		</query>
  </named-query>

  <!-- CsACasoOpeTipoOpe -->
    <named-query name="CsACasoOpeTipoOpe.deleteByCasoId">
    <query>
			<![CDATA[
				delete from CsACasoOpeTipoOpe d where d.casoId = :casoId
			]]>
		</query>
  </named-query>

  <named-query name="CsACasoOpeTipoOpe2.deleteOpeByCasoId">
    <query>
			<![CDATA[
				delete from CsACasoOpeTipoOpe2 d where d.casoId  = :casoId
			]]>
		</query>
  </named-query>
  
  <named-query name="CsACasoOpeTipoOpe2.findOpeByCasoId">
    <query>
			<![CDATA[
				select d from CsACasoOpeTipoOpe2 d where d.casoId = :casoId order by d.dataInizioSys
			]]>
		</query>
  </named-query>

  <named-query name="CsACasoOpeTipoOpe.findByCasoId">
    <query>
			<![CDATA[
				select d from CsACasoOpeTipoOpe d 
				left join fetch d.csOOperatoreTipoOperatore tipo
				left join fetch tipo.csOOperatoreSettore os
				left join fetch os.csOOperatore o
				left join fetch os.csOSettore s
				left join fetch s.csOOrganizzazione org
				left join fetch o.csOOperatoreAnagrafica ana
				where d.casoId = :casoId 
				order by d.dataInizioApp
			]]>
		</query>
  </named-query>

  <named-query name="CsACasoOpeTipoOpe.findResponsabileByCaso">
    <query>
			<![CDATA[
				select cs
				from CsACasoOpeTipoOpe cs 
				where cs.casoId = :casoId
				and cs.flagResponsabile = 1
			]]>
		</query>
  </named-query>
  <named-query name="CsACasoOpeTipoOpe.findOpSettoreResponsabileByCaso">
    <query>
			<![CDATA[
				select os
				from CsACasoOpeTipoOpe cs 
				left join cs.csOOperatoreTipoOperatore tipo
				left join tipo.csOOperatoreSettore os
				left join fetch os.csOOperatore o
				left join fetch os.csOSettore s
				left join fetch s.csOOrganizzazione org
				left join fetch o.csOOperatoreAnagrafica ana
				left join fetch os.tipoOperatore tipoOp
				left join fetch tipoOp.csTbTipoOperatore tb
				where cs.casoId = :casoId
				and cs.flagResponsabile = 1
			]]>
		</query>
  </named-query>
  <named-query name="CsOOperatoreBASIC.findResponsabileBASICByCaso">
    <query>
			<![CDATA[
				select cs.csOOperatoreTipoOperatoreBASIC.csOOperatoreSettoreBASIC.csOOperatoreBASIC
				from CsACasoOpeTipoOpeBASIC cs 
				left join fetch cs.csOOperatoreTipoOperatoreBASIC.csOOperatoreSettoreBASIC.csOOperatoreBASIC.csOOperatoreAnagrafica
				where cs.casoId = :casoId
				and cs.flagResponsabile = 1
				order by cs.dataFineApp desc
			]]>
		</query>
  </named-query>
  <named-query name="CsOOperatoreTipoOperatore.findOpTipoOpByOpSettore">
    <query>
			<![CDATA[
				select cs
				from CsOOperatoreTipoOperatore cs 
				where cs.csOOperatoreSettore.csOOperatore.id = :operatoreId
				and cs.csOOperatoreSettore.csOSettore.id = :settoreId
			]]>
		</query>
  </named-query>

  <named-query name="CsACasoOpeTipoOpe.findCasoOpeTipoOpeByCasoOpSettore">
    <query>
			<![CDATA[
				select cs
				from CsACasoOpeTipoOpe cs 
				where cs.csOOperatoreTipoOperatore.csOOperatoreSettore.id = :opSettoreId
				and   cs.casoId = :casoId
			]]>
		</query>
  </named-query>

  <named-query name="CsCfgParametri.findParamBySezioneChiave">
    <query>
			<![CDATA[
				select cs
				from CsCfgParametri cs 
				where cs.id.sezione = :sezione
				and cs.id.chiave = :chiave
			]]>
		</query>
  </named-query>

  <named-query name="CsCfgIntEsegStato.findIntEsegStatoByTipiStatoOrBypass">
    <query>
			<![CDATA[
				select c.csCfgIntEsegStato from CsCfgIntEsegStatoInt c 
				where c.csCfgIntervEseg.tipoIntervento.id = :tipoInterventoId AND
				     (c.bypassTipoStato=true OR c.csCfgIntEsegStato.tipo IN (:tipiStato)) 
				order by c.csCfgIntEsegStato.ordine
				
				]]>
		</query>
  </named-query>
  
  <named-query name="CsCfgIntEseg.findConfigIntErogByTipoIntervento">
    <query>
			<![CDATA[
				select c from CsCfgIntEsegStatoInt c 
				LEFT JOIN FETCH c.csCfgIntEsegStato stato
				where c.csCfgIntervEseg.tipoIntervento.id = :tipoInterventoId 
				]]>
		</query>
  </named-query>
  
   <named-query name="CsCfgAttrUnitaMisura.findByAttributoUM">
    <query>
			<![CDATA[
				select c from  CsCfgAttrUnitaMisura c 
				where c.csCfgAttributo.id =   :idAttributo 
				and   c.csTbUnitaMisura.id =  :idUnitaMisura
				]]>
		</query>
  </named-query>
  
   <named-query name="CsCfgAttrUnitaMisura.findByAttributoNullUM">
    <query>
			<![CDATA[
				select c from  CsCfgAttrUnitaMisura c 
				where c.csCfgAttributo.id =   :idAttributo 
				and   c.csTbUnitaMisura is null
				]]>
		</query>
  </named-query>
  

  <!-- inizio SISO-500 -->
  <named-query name="CsIInterventoEsegMast.findByInterventoId">
    <query>
			<![CDATA[
				select mast
				from CsIInterventoEsegMast mast 
				where mast.interventoProgrammatoId = :interventoId 
				]]>
		</query>
  </named-query>
  <named-query name="CsIInterventoEsegMast.findIdByInterventoId">
    <query>
			<![CDATA[
				select mast.id
				from CsIInterventoEsegMast mast 
				where mast.interventoProgrammatoId = :interventoId 
				]]>
		</query>
  </named-query>
    <named-query name="CsIPs.findByInterventoId">
    <query>
			<![CDATA[
				select ps
				from CsIPs ps 
				where ps.csIInterventoEsegMast.interventoProgrammatoId = :interventoId 
				]]>
		</query>
  </named-query>
  <!-- fine SISO-500 -->
  <named-query name="CsIInterventoPr.findProgettoByMasterId">
    <query>
			<![CDATA[
				select mast.csIInterventoPr
				from CsIInterventoEsegMast mast 
				where mast.id = :masterId 
				]]>
		</query>
  </named-query>
  <!-- fine SISO-500 -->
  
  
 
  <named-query name="CsIInterventoEsegMastSogg.findBeneficiariByMasterId">
    <query>
			<![CDATA[
				select sogg
				from CsIInterventoEsegMastSogg sogg 
				where sogg.master.id = :masterId 
				order by sogg.riferimento desc, sogg.cognome, sogg.nome
				]]>
		</query>
  </named-query>
  <named-query name="CsIInterventoEsegMastSogg.findBeneficiariByCfAttivitaProgetto">
    <query>
			<![CDATA[
				select sogg
				from CsIInterventoEsegMastSogg sogg 
				inner join fetch sogg.master sm inner join fetch sm.csIInterventoPr smIntPr
				inner join fetch smIntPr.csIInterventoPrFse
				where sogg.id.cf = :cf and sogg.riferimento = 1
					and smIntPr.progettoAttivita.id = :attivitaId
 						and smIntPr.progetto.id = :progettoId
				order by sogg.id.masterId desc
				]]>
		</query>
  </named-query>
    <named-query name="CsIInterventoEsegMastSogg.findBeneficiariByCfSoggetto">
    <query>
			<![CDATA[
				select sogg
				from CsIInterventoEsegMastSogg sogg 
				where sogg.id.cf = :cf and sogg.riferimento = 1
				order by sogg.id.masterId desc
				]]>
		</query>
  </named-query>

   <named-query name="CsIInterventoEseg.findInterventoEsegByMasterId">
    <query>
			<![CDATA[
				select inteseg
				from CsIInterventoEseg inteseg 
				left join fetch inteseg.csIValQuota q
				left join fetch inteseg.stato s
				left join fetch inteseg.csOOperatoreSettore op
				where inteseg.csIInterventoEsegMast.id = :masterId 
				order by inteseg.dataEsecuzione desc, inteseg.dtIns desc
				]]>
		</query>
  </named-query>
  
  <named-query name="CsIInterventoEseg.findSintesiInterventoEsegByInterventoId">
    <query>
			<![CDATA[
				select distinct inteseg.dataEsecuzione, inteseg.dataEsecuzioneA, inteseg.stato.nome, inteseg.dtIns
				from CsIInterventoEseg inteseg
				where inteseg.csIInterventoEsegMast.interventoProgrammatoId = :interventoId 
				order by inteseg.dataEsecuzione desc, inteseg.dtIns desc
				]]>
		</query>
  </named-query>
  
   <named-query name="CsIInterventoEsegValore.deletebyIdsIntervento">
    <query>
			<![CDATA[
				DELETE FROM CsIInterventoEsegValore cs
				WHERE cs.csIInterventoEseg.id IN (:listaIds)
				]]>
		</query>
  </named-query>
   
   <named-query name="CsIInterventoEseg.deleteByIds">
    <query>
			<![CDATA[
				DELETE FROM CsIInterventoEseg cs
				WHERE cs.id IN (:listaIds)
				]]>
		</query>
  </named-query>

  <named-query name="CsAAnagrafica.findAnagraficaByCf">
    <query>
			<![CDATA[
				select cs
				from CsAAnagrafica cs
				where cs.cf = :CodFisc
				]]>
		</query>
  </named-query>
  <named-query name="VGerrarchiaServizi.findAll">
    <query>
			<![CDATA[
				select s
				from VGerrarchiaServizi s
				]]>
		</query>
  </named-query>
  <named-query name="VGerrarchiaServizi.findAllNodesTipoIntervento">
    <query>
			<![CDATA[
				select s
				from VGerrarchiaServizi s
				where s.flagIntervento = '1'
				]]>
		</query>
  </named-query>

  <named-query name="VLineaFin.getLineeFinanziamentoByEnte">

    <query>
			<![CDATA[
				select a
				from VLineaFin a 
				where a.belfiore = :belfiore
				order by a.descrizione			
				]]>
		</query>
  </named-query>

  <named-query name="VInterventiRecenti.findAll">
    <query>
      <![CDATA[
        select a
        from VTipiInterventoUsati a
        order by a.occorrenze desc   
        ]]>
    </query>
  </named-query>
  
  <named-query name="VInterventiRecenti.findTipiIntervento">
    <query>
      <![CDATA[
        select DISTINCT a.idTipoIntervento, a.descrizioneTipoIntervento
        from VTipiInterventoUsati a
        order by a.descrizioneTipoIntervento
        ]]>
    </query>
  </named-query>
  
  <named-query name="VInterventiRecenti.findTipiInterventoCustom">
    <query>
      <![CDATA[
        select DISTINCT a.idTipoInterventoCustom, a.descrizioneTipoInterventoCustom 
        from VTipiInterventoUsati a where a.idTipoInterventoCustom is not null
        order by descrizioneTipoInterventoCustom
        ]]>
    </query>
  </named-query>
 
  <named-query name="CsCCategoriaSociale.findByDescrizione">
    <query>
			<![CDATA[
				select c from CsCCategoriaSociale c where c.descrizione = :desc
				]]>
		</query>

	</named-query>
	

	<!-- INIZIO SISO-524 -->
	<named-query name="CsIPsExport.findByCsIInterventoMastId">
		<query>
			<![CDATA[			 
				select psex from CsIPsExport psex 
				where psex.csIInterventoEsegMast.id = :csIInterventoMastId			
				]]>
		</query>
	</named-query>
	<!-- FINE SISO-524 -->
	
	<!-- inizio SISO-884 -->
	<named-query name="CsIPsExport.countEsegExportedByIds">
		<query>
			<![CDATA[			 
				select count(psex) from CsIPsExport psex 
				where psex.csIInterventoEseg.id IN :csIInterventoEsegIds 
				and (psex.flagEsportato = 1	or psex.dtRevocaExport is null)		
				]]>
		</query>
	</named-query>
	<named-query name="CsIPsExport.findByCsIInterventoMastIdExported">
		<query>
			<![CDATA[			 
				select psex from CsIPsExport psex 
				where psex.csIInterventoEsegMast.id = :csIInterventoMastId and psex.flagEsportato = 1		
				]]>
		</query>
	</named-query>
	
	<named-query name="CsIPsExport.findByIntEsegIdAndIntEsegMastId">
		<query>
			<![CDATA[			 
				select psex from CsIPsExport psex 
				 where psex.csIInterventoEseg.id= :intEsegId
				  and psex.csIInterventoEsegMast.id= :intEsegMastId
			]]>
		</query>
	</named-query>
	
	<named-query name="CsIPsExport.deleteByIntEsegIdAndIntEsegMastId">
		<query>
			<![CDATA[			 
				delete from CsIPsExport psex 
				 where psex.csIInterventoEseg.id= :intEsegId
				  and psex.csIInterventoEsegMast.id= :intEsegMastId
				  and psex.flagEsportato = 0		
				]]>
		</query>
	</named-query>
	
	<named-query name="CsIPsExportMast.deleteById">
		<query>
			<![CDATA[			 
				delete  from CsIPsExportMast psexm 
				 where psexm.id = :id
			]]>
		</query>
	</named-query>
	
	<named-query name="CsIPsExportMast.findByIds">
		<query>
			<![CDATA[			 
				select psexm from CsIPsExportMast psexm 
				where psexm.id IN :ids 				
				]]>
		</query>
	</named-query>
	
	<!-- fine SISO-884 -->
	
	<named-query name="CsIPsExportMast.findPsExportMastInPeriodo">
		<query>
			<![CDATA[			 
				select c from CsIPsExportMast c 
				where TO_DATE(:dataDA,'dd/MM/yyyy')<=TO_DATE(TO_CHAR(dataInvio,'dd/MM/yyyy'),'dd/MM/yyyy') 
				  and TO_DATE(TO_CHAR(dataInvio,'dd/MM/yyyy'),'dd/MM/yyyy')<=TO_DATE(:dataA,'dd/MM/yyyy')					
				]]>
		</query>
	</named-query>
	
	<!-- INIZIO MOD-RL -->
	<named-query name="CsIPsExportMast.countProgressivoCsIPsExportMast">
		<query>
			<![CDATA[			
					select COUNT(ex) from CsIPsExportMast ex where ex.enteTitolare = :enteTitolare and ex.flusso = :flusso  and  ex.dtIns >= :dtInsStart and  ex.dtIns < :dtInsEnd				
				]]>
		</query>
	</named-query>
	<!-- FINE MOD-RL -->
	
	<!-- INIZIO MOD-RL -->
	<named-query name="CsDExportSinba.countProgressivoCsDExportSinba">
		<query>
			<![CDATA[			
					select COUNT(ex) from CsDExportSinba ex where ex.enteErogatore = :enteErogatore and ex.flusso = :flusso  and  ex.dtIns >= :dtInsStart and  ex.dtIns < :dtInsEnd				
				]]>
		</query>
	</named-query>
	<!-- FINE MOD-RL -->
	
	<named-query name="CsSsSchedaSegr.deleteSchedaBySchedaIdProvenienza">
		<query>
			<![CDATA[
 				delete from CsSsSchedaSegr s where s.schedaId = :schedaId and s.provenienza = :provenienza
 			]]>
		</query>
	</named-query>
	
	<named-query name="CsIRigaQuota.deleteById">
		<query>
			<![CDATA[
				delete from CsIRigaQuota d where d.id  IN (:listaIds)
			]]>
		</query>
	</named-query>
	
	<named-query name="CsIRigaQuota.findIdsByQuota">
		<query>
			<![CDATA[
				select d from CsIRigaQuota d 
				where d.csIQuota.id  = :idQuota
			]]>
		</query>
	</named-query>
	<named-query name="CsIQuota.findById">
		<query>
			<![CDATA[ 
				select q from CsIQuota q 
				where q.id  = :id 
			]]>
		</query>
	</named-query>
	<named-query name="CsIQuota.delete">
		<query>
			<![CDATA[ 
				DELETE FROM CsIQuota q
				WHERE q.id = :id
			]]>
		</query>
	</named-query>
	
	<named-query name="CsIValQuota.delete">
		<query>
			<![CDATA[ 
				DELETE FROM CsIValQuota vq
				WHERE vq.id = :id
			]]>
		</query>
	</named-query>
	
	<named-query name="CsIRigaQuota.delete">
		<query>
			<![CDATA[ 
				DELETE FROM CsIRigaQuota rq
				WHERE rq.id = :id
			]]>
		</query>
	</named-query>
	<named-query name="CsIQuotaRipartiz.delete">
		<query>
			<![CDATA[ 
				DELETE FROM CsIQuotaRipartiz qr
				WHERE qr.id = :id
			]]>
		</query>
	</named-query>
	
	<named-query name="CsIPs.deleteByEsegMastId">
		<query>
			<![CDATA[ 
				DELETE FROM CsIPs ps
				WHERE ps.csIInterventoEsegMast.id = :masterId
			]]>
		</query>
	</named-query>
	
	<named-query name="CsDRelazione.findLastRelazioneProblAperte">
		<query>
			<![CDATA[
				select r from CsDRelazione r 
				 inner join fetch r.csDDiario d inner join fetch d.csOOperatoreSettore os
				where  d.csACaso.id= :idCaso				 
				 AND r.flagRilevazioneProblematiche='1'
				order by d.dtAmministrativa desc							
			]]>
		</query>
	</named-query>

	<!-- inizio  SISO-1131 --> 
	 <named-query name="CsTbProgettoAltro.findProgettoAltroByDescrizione">
    <query>
			<![CDATA[
				select p 
				from CsTbProgettoAltro p
				where p.abilitato = '1' 
				and (upper(p.descrizione)) like ('%'||UPPER(:descrizione)||'%')
				order by p.descrizione
			]]>
		</query>
  </named-query>
	<!-- fine  SISO-1131 --> 

  	<named-query name="CsCfTemp.findByCfTempAndCf">
		<query>
			<![CDATA[
				select c from CsCfTemp c 				
 				where c.cfTemp = :cfTemp 
 					and nvl(c.cf, 'null') = :cf			 							
			]]>
		</query>
	</named-query>
	<named-query name="CsCfTemp.findByCfTemp">
		<query>
			<![CDATA[
				select c from CsCfTemp c 				
 				where c.cfTemp = :cfTemp 										
			]]>
		</query>
	</named-query>
	<named-query name="CsCfTemp.findByAttribs">
		<query>
			<![CDATA[
				select c from CsCfTemp c 				
 				where c.attributi = :attribs 
 						 							
			]]>
		</query>
	</named-query>  
	<named-query name="CsCfgIntPrForm.find">
		<query>
			<![CDATA[
				select distinct c.rifFormInterventoPrDett from CsCfgIntPrForm c 				
 				where (c.csCCategoriaSociale is null OR c.csCCategoriaSociale.id = :catSocialeId)
 				and   (c.csIIntervento is null OR c.csIIntervento.id = :tipoInterventoId)
 				and   (c.csIInterventoCustom is null OR c.csIInterventoCustom.id = :tipoInterventoCustomId)
 				and   c.ffProgettoDescrizione = :progetto
 				and   c.abilitato=1
			]]>
		</query>
	</named-query>  
	<!--  SISO-1160 Inizio -->
		<named-query name="ArBiInviante.findByInvianteIdAndNome">
				<query>
					<![CDATA[
					select c from ArBiInviante c 				
						where (c.idInviante = :idInviante and c.nomeInviante = :nomeInviante)
			 	]]>
			</query>
		</named-query>  
	<!--  SISO-1160 Fine -->	
	<!--  SISO-1110 Inizio -->
	<named-query name="VServiziCustom.findAreaTInterventoById">
		<query>
			<![CDATA[
	 
 					SELECT s.interventoCustomId, s.areatId, s.areatDescrizione, s.codiceMemoAreat FROM VServiziCustom s 
						WHERE s.interventoCustomId = :interventoCustomId
						group by s.interventoCustomId, s.areatId, s.areatDescrizione, s.codiceMemoAreat  
		 	]]>
		</query>
	</named-query>  
	<named-query name="VServiziCustom.findDettaglioInterventobyAreaTId">
		<query>
			<![CDATA[
	 
 					SELECT  distinct s.interventoCustomId , s.interventoDescrizione FROM VServiziCustom s 
						WHERE s.areatDescrizione IN (:areeId)
					
		 	]]>
		</query>
	</named-query>  
	
	<named-query name="ArRelIntCustomIstat.findIstatByTipoInterventoId">
    <query>
			<![CDATA[
				SELECT a FROM ArRelIntCustomIstat a join a.csCInterventoCustom  WHERE a.csCInterventoCustom.id = :tipoInterventoId
				]]>
		</query>
  </named-query>
  <named-query name="ArTClasse.findByCodiceMemo">
		<query>
			<![CDATA[
	 
 					SELECT a FROM ArTClasse a 
						WHERE a.codiceMemo like ('%'||UPPER(:codiceMemo)||'%')
						
		 	]]>
		</query>
	</named-query>  
	<named-query name="VServiziCustom.findAreaTInterventoByIdeAreaTSoggetto">
		<query>
			<![CDATA[
	 
 					SELECT s.interventoCustomId, s.areatId, s.areatDescrizione, s.codiceMemoAreat FROM VServiziCustom s 
						WHERE s.interventoCustomId = :interventoCustomId
						and  s.areatDescrizione IN (:areeId)
						group by s.interventoCustomId, s.areatId, s.areatDescrizione, s.codiceMemoAreat 
		 	]]>
		</query>
	</named-query>  
	<!--  SISO-1110 Fine -->
	<named-query name="CsMobileStaging.findRecord2Elab">
		<query>
		<![CDATA[
			select m from CsMobileStaging m where flgElab <> 1 order by dtSincro, tipo
		]]>
		</query>
	</named-query>
	
	<!--  inizio SISO-790 -->
	<named-query name="ArTbPrestazioniInps.findByCodice"> 
		<query>
			<![CDATA[
				SELECT a FROM ArTbPrestazioniInps a  WHERE a.codice IN (:codice)
			]]>
		</query>
	</named-query> 
	
	 <named-query name="ArTbPrestazioniInps.findTipiInterventoInps">
    <query>
      <![CDATA[
        select DISTINCT a.codice, a.denominazione
        from ArTbPrestazioniInps a 
        order by codice
        ]]>
    </query>
  </named-query>
  	
	<!-- SISO-780 -->
	<named-query name="CsIPsExport.revocByEsegMastId">
		<query>
			<![CDATA[			 
				UPDATE CsIPsExport SET flagEsportato = 0, dtRevocaExport = :dataRevoca WHERE csIInterventoEsegMast.id = :esegMastId					
				]]>
		</query>
	</named-query>
	
<!-- SISO-777 -estrazione dei codici prestazione in un intervallo di tempo (data iniziale di riferimento - data iniziale di riferimento- 1 anno)-->
<!--x cf e stato (E) -->
	<named-query name="CsIPs.findCodiciPrestazione">
		<query>
			<![CDATA[			 
				select distinct csips.codPrestazione
				from CsIPs csips
				where csIInterventoEsegMast in 	
				       (select sogg.master.id
                		from CsIInterventoEsegMastSogg sogg, CsIInterventoEseg eseg,CsCfgIntEsegStato es
				        where sogg.id.masterId = eseg.masterId
				        and eseg.stato.id = es.id
				        and sogg.id.cf = :cf 
				        and (TO_DATE(TO_CHAR(eseg.dataEsecuzione,'dd/MM/yyyy'),'dd/MM/yyyy') >= TO_DATE(:dtIniRiferimento,'dd/MM/yyyy')
				        and  TO_DATE(TO_CHAR(eseg.dataEsecuzione,'dd/MM/yyyy'),'dd/MM/yyyy')  <= TO_DATE(:dtFineRiferimento,'dd/MM/yyyy'))
				        and es.tipo  = :tipo)
				and codPrestazione is not null
							
				]]>		
		</query>
	</named-query>
	
	<named-query name="ArTbPrestazioniInps.findPrestazioniByAreaId">
		<query>
			<![CDATA[	
			
				SELECT DISTINCT pinps 
				FROM 	VGerrarchiaServizi vgs,
						ArRelClassememoPresInps arrel,
						ArTbPrestazioniInps pinps 
				WHERE 	
						vgs.flagIntervento 	= 1
				AND		vgs.areaTid	= :area 	
				AND		arrel.arTClasse.id = vgs.tClasseId
				AND		pinps.codice = arrel.arTbPrestazioniInp.codice
					
				]]>
		</query>
	</named-query>
	
	<named-query name="CsDSinba.getListaSchedaSinbaByIdCaso">
		<query>
			<![CDATA[	
			
				SELECT sinba
				FROM CsDSinba sinba
				WHERE sinba.csDValutazione.csDDiario.csACaso.id = :casoId
					
				]]>
		</query>
	</named-query>
	
	<named-query name="CsDSinba.getLastSchedaSinbaByIdCaso">
		<query>
			<![CDATA[	
			
				SELECT sinba
				FROM CsDSinba sinba
				WHERE sinba.csDValutazione.csDDiario.csACaso.id = :casoId
					order by sinba.csDValutazione.csDDiario.dtAmministrativa DESC
				]]>
		</query>
	</named-query>
	
	<!-- SISO-885 -->  
    <named-query name="CsIInterventoPr.eliminaProgetto">
        <query>
			<![CDATA[
				DELETE FROM CsIInterventoPr pr
				WHERE pr.id = :id
			]]>
		</query>
     </named-query> 
     
     <!-- SISO-885 -->  
    <named-query name="CsIInterventoPrFse.eliminaProgettoFse">
        <query>
			<![CDATA[
				DELETE FROM CsIInterventoPrFse prFse
				WHERE prFse.interventoPrId = :id
			]]>
		</query>
     </named-query> 
     
     <!-- SISO-885 -->  
    <named-query name="CsIInterventoPrFseSiru.eliminaProgettoFseSiru">
        <query>
			<![CDATA[
				DELETE FROM CsIInterventoPrFseSiru prFseSiru
				WHERE prFseSiru.interventoPrId = :id
			]]>
		</query>
     </named-query> 
     
     <named-query name="VSsSchedeUdcDiff.verificaAggiornamenti">
        <query>
			<![CDATA[
				SELECT s FROM VSsSchedeUdcDiff s 
				WHERE s.dt > (SELECT max(a.dtIns) FROM CsAlert a where a.tipo = 'MODUDC') OR
				      (SELECT max(a.dtIns) FROM CsAlert a where a.tipo = 'MODUDC') IS NULL
			]]>
		</query>
     </named-query> 
     
     <named-query name="CsAAnagraficaLog.findStorico">
        <query>
			<![CDATA[
				SELECT s FROM CsAAnagraficaLog s 
				WHERE s.csAAnagrafica.id = :anagraficaId order by s.dataModifica DESC
			]]>
		</query>
     </named-query> 
     
     
     <named-query name="CsIInterventoEsegMastSogg.findInterventiByCasoId">
        <query>
			<![CDATA[
				SELECT s FROM CsIInterventoEsegMastSogg s 
				WHERE s.caso.id= :casoId
			]]>
		</query>
     </named-query> 
     
     
     <named-query name="VMobiCasi.findCasiById">
        <query>
			<![CDATA[
				SELECT s FROM VMobiCasi s 
				WHERE s.casoId= :casoId
			]]>
		</query>
     </named-query> 
     
     
<!-- implementa native query per recuperare gli INT_ESEG_MAST_ID su CS_I_INTERVENTO_ESEG_MAST_SOGG a partire da caso_id -->
	<named-query name="VMobiIntErog.findIntEsegMastIdByCasoId">
        <query>
			<![CDATA[
				SELECT a FROM VMobiIntErog a 
				WHERE a.erSoggCasoId= :casoId
				and a.iId is null
				and a.erSoggCasoId IN (:idSettoreErogante)
			]]>
		</query>
     </named-query> 
     <named-query name="VMobiIntErog.findIntEsegMastIdByCasoIdData">
        <query>
			<![CDATA[
				SELECT a FROM VMobiIntErog a 
				WHERE a.erSoggCasoId= :casoId
				and a.flgFlagAttSospC = 'A' 
				and (a.flgDtAttivazioneDa is null or a.flgDtAttivazioneDa < :dataValiditaErogazione ) 
				and (a.flgDtAttivazioneA is null or a.flgDtAttivazioneA > :dataValiditaErogazione )
				and a.erSoggCasoId IN (:idSettoreErogante)
			]]>
		</query>
     </named-query> 
     
     
    <!-- #ROMACAPITALE inizio -->
	<named-query name="CsOSettore.findSettoriById">
		<query>
			<![CDATA[
				SELECT s FROM  CsOSettore s WHERE s.id IN (:listaIdSettori)
			]]>
		</query>
	</named-query>
	<!-- #ROMACAPITALE fine -->
	
	 <!-- TASK SISO-1278 -->
     <named-query name="CsTbSinaRisposta.findRispostaByDomandaId">
     <query>
			<![CDATA[
				SELECT c FROM CsTbSinaRisposta c WHERE c.csTbSinaDomanda.id = :idDomanda
			]]>
		</query>
     </named-query>
   
     <!-- Progetti Individuali -->
	 <named-query name="CsPaiFaseChiusura.findPaiFaseChiusuraByTipoPaiId">
	    <query>
	      <![CDATA[
	        select a 
	        from CsPaiFaseChiusura a where a.id.tipoPai = :idTipoPai
	        ]]>
	    </query>
	  </named-query>
	  
	 <named-query name="CsOSettore.findPerRiunione">
    <query>
			<![CDATA[
				  select it from CsOSettore it 
				       WHERE it.flgRiunioneCon = 1
			]]>
		</query>
  </named-query>
	
  <named-query name="CsRelSettoreStruttura.findSettoreByIdStruttura">
     <query>
			<![CDATA[
				SELECT s FROM CsRelSettoreStruttura s 
				WHERE s.idStruttura = :idStruttura
			]]>
		</query>
  </named-query>
  
  <named-query name="CsRelSettoreStruttura.findSettoreByStruttura">
    <query>
			<![CDATA[
				SELECT cos FROM CsOSettore cos, CsRelSettoreStruttura crss 
				WHERE cos.id = crss.idSettore and crss.idStruttura = :idStruttura
			]]>
		</query>
  </named-query>
  
  <named-query name="CsOOperatoreSettore.findOperatoreSettoreByCodStruttura">
    <query>
			<![CDATA[
				select DISTINCT os
				from CsOOperatoreSettore os  
				where os.csOSettore.csTbSecondoLivello.descrizione = :tipo2livello
				and os.csOSettore.csOOrganizzazione.codRouting=:codRouting
				
			]]>
		</query>
  </named-query>
  
  <named-query name="CsOOperatoreSettore.findOperatoreSettore2LivByIdOperatore">
    <query>
			<![CDATA[
				select os
				from CsOOperatoreSettore os  
				where os.csOSettore.csTbSecondoLivello.descrizione = :tipo2livello
				and os.csOSettore.csOOrganizzazione.codRouting=:codRouting
				and os.csOOperatore.id  = :idOperatore
				and os.dataFineApp >= :dtRif
			]]>
		</query>
  </named-query>
  
  <named-query name="CsOOperatoreSettore.findOperatoreSettore2LivByUsername">
    <query>
			<![CDATA[
				select os
				from CsOOperatoreSettore os  
				where os.csOSettore.csTbSecondoLivello.descrizione = :tipo2livello
				and os.csOSettore.csOOrganizzazione.codRouting=:codRouting
				and os.csOOperatore.username  = :username
				and os.dataFineApp >= :dtRif
			]]>
		</query>
  </named-query>
  
  <named-query name="InserimentoMinoreDaStruttura.findInsMinoriInZsDaStruttura">
    <query>
      <![CDATA[
       SELECT ins FROM InserimentoMinoreDaStruttura ins, CsOOrganizzazione o 
       where ins.codRouting  = o.codRouting and ins.stato = :statoI 
      ]]>
    </query>
  </named-query>
  
  <named-query name="CsPaiMastSogg.findSoggByDiarioId">
    <query>
      <![CDATA[
        select c 
        from CsPaiMastSogg c 
        where c.diarioId = :diarioId
      ]]>
    </query>
  </named-query>
  
  
     <!-- TASK SISO-1044 -->
     <named-native-query name="VMobiCasi.findCasiByOperatoreBySoggettoNomeCognome" result-set-mapping="VMobiCasiIdRicercaResult" >
        <query>
        <![CDATA[
SELECT * FROM V_Mobi_Casi where caso_id in (
SELECT a.CASO_ID caso_id FROM V_MOBI_CASI a INNER JOIN CS_A_SOGGETTO sogg ON (a.CASO_ID=sogg.CASO_ID)     INNER JOIN CS_a_dati_sociali ds ON (sogg.ANAGRAFICA_ID=ds.SOGGETTO_ANAGRAFICA_ID) 
left join V_Mobi_Int_Erog s on s.er_Sogg_Caso_Id=a.CASO_ID left join CS_IT_STEP d on (d.CASO_ID=a.CASO_ID and d.CFG_IT_STATO_ID =3)
WHERE TO_CHAR(ds.DATA_FINE_APP,'YYYY') = '9999' 
and a.USERNAME = :username 
and a.SOGG_NOME = :nomeSoggetto
and a.SOGG_COGNOME = :cognomeSoggetto
and a.SETTORE_ID IN (:idSettoreErogante)
group by a.CASO_ID 
having count(d.id) > 0)
]]></query>
  </named-native-query>
  <!-- TASK SISO-1044 -->
  <named-native-query name="VMobiCasi.findCasiByOperatoreBySoggettoCognome" result-set-mapping="VMobiCasiIdRicercaResult" >
        <query>
        <![CDATA[
        SELECT * FROM V_Mobi_Casi where caso_id in (
SELECT a.CASO_ID caso_id FROM V_MOBI_CASI a INNER JOIN CS_A_SOGGETTO sogg ON (a.CASO_ID=sogg.CASO_ID)     INNER JOIN CS_a_dati_sociali ds ON (sogg.ANAGRAFICA_ID=ds.SOGGETTO_ANAGRAFICA_ID) 
left join V_Mobi_Int_Erog s on s.er_Sogg_Caso_Id=a.CASO_ID left join CS_IT_STEP d on (d.CASO_ID=a.CASO_ID and d.CFG_IT_STATO_ID =3)
WHERE TO_CHAR(ds.DATA_FINE_APP,'YYYY') = '9999' 
and a.USERNAME = :username 
and a.SOGG_COGNOME = :cognomeSoggetto
and a.SETTORE_ID IN (:idSettoreErogante)
group by a.CASO_ID 
having count(d.id) > 0)
]]>
</query>
  </named-native-query>
  <!-- TASK SISO-1044 -->
  
  
  <named-native-query name="VMobiCasi.findCasiByOperatoreBySoggettoNomeCognomeCF" result-set-mapping="VMobiCasiIdRicercaResult" >
        <query>
        <![CDATA[
        SELECT * FROM V_Mobi_Casi where caso_id in (
SELECT a.CASO_ID caso_id FROM V_MOBI_CASI a INNER JOIN CS_A_SOGGETTO sogg ON (a.CASO_ID=sogg.CASO_ID)     INNER JOIN CS_a_dati_sociali ds ON (sogg.ANAGRAFICA_ID=ds.SOGGETTO_ANAGRAFICA_ID) 
left join V_Mobi_Int_Erog s on s.er_Sogg_Caso_Id=a.CASO_ID left join CS_IT_STEP d on (d.CASO_ID=a.CASO_ID and d.CFG_IT_STATO_ID =3)
WHERE TO_CHAR(ds.DATA_FINE_APP,'YYYY') = '9999' 
and ( REPLACE(LOWER(CONCAT(a.SOGG_COGNOME,a.SOGG_NOME)),' ','') = :stringaRicercaSogg or REPLACE(LOWER(CONCAT(a.SOGG_NOME,a.SOGG_COGNOME)),' ','') = :stringaRicercaSogg or REPLACE(LOWER(a.SOGG_COGNOME),' ','') = :stringaRicercaSogg or REPLACE(LOWER(a.SOGG_CF),' ','')= :stringaRicercaSogg)
group by a.CASO_ID 
having count(d.id) > 0)
and V_Mobi_Casi.USERNAME = :username 
and V_Mobi_Casi.SETTORE_ID IN (:idSettoreErogante)
]]>
</query>
  </named-native-query>
  
  
  
   
    <sql-result-set-mapping name="VMobiCasiIdRicercaResult">
    <entity-result entity-class="it.webred.cs.data.model.view.VMobiCasi">
    </entity-result>
	</sql-result-set-mapping>
</entity-mappings>
